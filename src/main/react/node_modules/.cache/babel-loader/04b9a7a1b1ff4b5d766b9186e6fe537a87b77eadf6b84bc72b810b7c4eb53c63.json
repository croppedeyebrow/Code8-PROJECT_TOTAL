{"ast":null,"code":"import axios from\"axios\";import Common from\"../utils/Common.jsx\";const CommunityAxiosApi={// 게시글 조회\ngetCommunityList:async(page,size)=>{return await axios.get(Common.DOMAIN+\"/api/community/list/page?page=\".concat(page,\"&size=\").concat(size),{headers:{\"Content-Type\":\"application/json\"}});},// 게시글 조회 (카테고리 별)\ngetCommunityListByCategory:async(categoryId,page,size)=>{return await axios.get(Common.DOMAIN+\"/api/community/list/page/category?categoryId=\".concat(categoryId,\"&page=\").concat(page,\"&size=\").concat(size),{headers:{\"Content-Type\":\"application/json\"}});},// 카테고리 조회\ncateList:async()=>{return await axios.get(Common.DOMAIN+\"/api/category/list\",{headers:{\"Content-Type\":\"application/json\"}});},// 페이지 수 조회\ngetCommunityTotalPages:async size=>{return await axios.get(Common.DOMAIN+\"/api/community/count?size=\".concat(size),{headers:{\"Content-Type\":\"application/json\"}});},// 카테고리에 따른 페이지 수 조회\ngetCommunityTotalPagesByCategory:async(categoryId,size)=>{return await axios.get(Common.DOMAIN+\"/api/community/count/\".concat(categoryId,\"?page=0&size=\").concat(size),{headers:{\"Content-Type\":\"application/json\"}});},// 게시글 등록\ncommunityPost:async communityDTO=>{return await axios.post(Common.DOMAIN+\"/api/community/new\",communityDTO,{headers:{\"Content-Type\":\"application/json\"}});},// 게시글 상세 조회\ngetCommunityDetail:async communityId=>{return await axios.get(Common.DOMAIN+\"/api/community/detail/\".concat(communityId),{headers:{\"Content-Type\":\"application/json\"}});},// 댓글 리스트 조회\ngetCommentList:async function(communityId){let sortType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"최신순\";let page=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;let size=arguments.length>3&&arguments[3]!==undefined?arguments[3]:10;return await axios.get(Common.DOMAIN+\"/api/comment/list/\".concat(communityId,\"/page\"),{params:{sortType,page,size},headers:{\"Content-Type\":\"application/json\"}});},// 댓글 쓰기\ncommentWrite:async(email,nickName,password,communityId,content,parentCommentId)=>{const comment={email:email,nickName:nickName,password:password,communityId:communityId,content:content,parentCommentId:parentCommentId};return await axios.post(Common.DOMAIN+\"/api/comment/new\",comment,{headers:{\"Content-Type\":\"application/json\"}});},// 대댓글 쓰기\nreplyWrite:async(email,nickName,password,communityId,content,parentCommentId)=>{const reply={email:email,nickName:nickName,password:password,communityId:communityId,content:content[parentCommentId],parentCommentId:parentCommentId};return await axios.post(Common.DOMAIN+\"/api/comment/reply/new\",reply,{headers:{\"Content-Type\":\"application/json\"}});},//개념글 추천\nvote:async(communityId,isUpvote)=>{return await axios.post(\"\".concat(Common.DOMAIN,\"/api/community/vote/\").concat(communityId,\"/\").concat(isUpvote),{},{headers:{\"Content-Type\":\"application/json\"}});},// 전체 댓글 수 조회\ngetTotalComments:async communityId=>{return await axios.get(Common.DOMAIN+\"/api/comment/count/\".concat(communityId),{headers:{\"Content-Type\":\"application/json\"}});},// 댓글 삭제\ncommentDelete:async commentId=>{return await axios.delete(Common.DOMAIN+\"/api/comment/delete/\".concat(commentId),{headers:{\"Content-Type\":\"application/json\"}});},// 실시간 랭킹 조회\ngetRanking:async period=>{return await axios.get(Common.DOMAIN+\"/api/community/ranking/\"+period,{headers:{\"Content-Type\":\"application/json\"}});},// 게시글 검색\nsearchCommunity:async function(searchType,keyword){let page=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;let size=arguments.length>3&&arguments[3]!==undefined?arguments[3]:10;return await axios.get(Common.DOMAIN+\"/api/community/search/\".concat(searchType,\"?page=\").concat(page,\"&size=\").concat(size,\"&keyword=\").concat(keyword),{headers:{\"Content-Type\":\"application/json\"}});}};export default CommunityAxiosApi;","map":{"version":3,"names":["axios","Common","CommunityAxiosApi","getCommunityList","page","size","get","DOMAIN","concat","headers","getCommunityListByCategory","categoryId","cateList","getCommunityTotalPages","getCommunityTotalPagesByCategory","communityPost","communityDTO","post","getCommunityDetail","communityId","getCommentList","sortType","arguments","length","undefined","params","commentWrite","email","nickName","password","content","parentCommentId","comment","replyWrite","reply","vote","isUpvote","getTotalComments","commentDelete","commentId","delete","getRanking","period","searchCommunity","searchType","keyword"],"sources":["C:/dev/PROJECT_TOTAL/src/main/react/src/axios/CommunityAxios.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport Common from \"../utils/Common.jsx\";\r\n\r\nconst CommunityAxiosApi = {\r\n  // 게시글 조회\r\n  getCommunityList: async (page, size) => {\r\n    return await axios.get(\r\n      Common.DOMAIN + `/api/community/list/page?page=${page}&size=${size}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // 게시글 조회 (카테고리 별)\r\n  getCommunityListByCategory: async (categoryId, page, size) => {\r\n    return await axios.get(\r\n      Common.DOMAIN +\r\n        `/api/community/list/page/category?categoryId=${categoryId}&page=${page}&size=${size}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // 카테고리 조회\r\n  cateList: async () => {\r\n    return await axios.get(Common.DOMAIN + `/api/category/list`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n  // 페이지 수 조회\r\n  getCommunityTotalPages: async (size) => {\r\n    return await axios.get(\r\n      Common.DOMAIN + `/api/community/count?size=${size}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // 카테고리에 따른 페이지 수 조회\r\n  getCommunityTotalPagesByCategory: async (categoryId, size) => {\r\n    return await axios.get(\r\n      Common.DOMAIN + `/api/community/count/${categoryId}?page=0&size=${size}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // 게시글 등록\r\n  communityPost: async (communityDTO) => {\r\n    return await axios.post(\r\n      Common.DOMAIN + \"/api/community/new\",\r\n      communityDTO,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // 게시글 상세 조회\r\n  getCommunityDetail: async (communityId) => {\r\n    return await axios.get(\r\n      Common.DOMAIN + `/api/community/detail/${communityId}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // 댓글 리스트 조회\r\n  getCommentList: async (\r\n    communityId,\r\n    sortType = \"최신순\",\r\n    page = 0,\r\n    size = 10\r\n  ) => {\r\n    return await axios.get(\r\n      Common.DOMAIN + `/api/comment/list/${communityId}/page`,\r\n      {\r\n        params: {\r\n          sortType,\r\n          page,\r\n          size,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n\r\n  // 댓글 쓰기\r\n  commentWrite: async (\r\n    email,\r\n    nickName,\r\n    password,\r\n    communityId,\r\n    content,\r\n    parentCommentId\r\n  ) => {\r\n    const comment = {\r\n      email: email,\r\n      nickName: nickName,\r\n      password: password,\r\n      communityId: communityId,\r\n      content: content,\r\n      parentCommentId: parentCommentId,\r\n    };\r\n    return await axios.post(Common.DOMAIN + `/api/comment/new`, comment, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n  // 대댓글 쓰기\r\n  replyWrite: async (\r\n    email,\r\n    nickName,\r\n    password,\r\n    communityId,\r\n    content,\r\n    parentCommentId\r\n  ) => {\r\n    const reply = {\r\n      email: email,\r\n      nickName: nickName,\r\n      password: password,\r\n      communityId: communityId,\r\n      content: content[parentCommentId],\r\n      parentCommentId: parentCommentId,\r\n    };\r\n    return await axios.post(Common.DOMAIN + `/api/comment/reply/new`, reply, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n  //개념글 추천\r\n  vote: async (communityId, isUpvote) => {\r\n    return await axios.post(\r\n      `${Common.DOMAIN}/api/community/vote/${communityId}/${isUpvote}`,\r\n      {},\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // 전체 댓글 수 조회\r\n  getTotalComments: async (communityId) => {\r\n    return await axios.get(\r\n      Common.DOMAIN + `/api/comment/count/${communityId}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n\r\n  // 댓글 삭제\r\n  commentDelete: async (commentId) => {\r\n    return await axios.delete(\r\n      Common.DOMAIN + `/api/comment/delete/${commentId}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // 실시간 랭킹 조회\r\n  getRanking: async (period) => {\r\n    return await axios.get(Common.DOMAIN + \"/api/community/ranking/\" + period, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n  // 게시글 검색\r\n  searchCommunity: async (searchType, keyword, page = 0, size = 10) => {\r\n    return await axios.get(\r\n      Common.DOMAIN +\r\n        `/api/community/search/${searchType}?page=${page}&size=${size}&keyword=${keyword}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n};\r\nexport default CommunityAxiosApi;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}