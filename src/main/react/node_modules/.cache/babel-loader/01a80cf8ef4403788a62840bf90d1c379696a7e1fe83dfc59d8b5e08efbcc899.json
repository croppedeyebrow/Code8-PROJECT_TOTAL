{"ast":null,"code":"import axios from\"axios\";import Common,{CHORD8_DOMAIN,Interceptor}from\"../utils/Common\";const AxiosApi={// 회원 정보 조회\ngetUserList:async()=>{try{return await axios.get(CHORD8_DOMAIN+\"/auth/userList\");}catch(error){console.error(\"Error in getUserList:\",error);throw error;// Re-throw the error for further handling if necessary\n}},// 상품 조회\nproductGet:async()=>{try{return await axios.get(CHORD8_DOMAIN+\"/product/productlist\");}catch(error){console.error(\"Error in productGet:\",error);throw error;}},// ID를 기준으로 상품을 찾음\nfindProductById:async id=>{try{const response=await axios.get(CHORD8_DOMAIN+\"/product/\".concat(id));return response;}catch(error){console.error(\"Error in findProductById:\",error);throw error;}},// 뉴스 조회\nnewsGet:async()=>{try{return await axios.get(CHORD8_DOMAIN+\"/news/newslist\");}catch(error){console.error(\"Error in newsGet:\",error);throw error;}},// 물건 결제하기\ndoPurchase:async price=>{try{const accessToken=Common.getAccessToken();const productDto={token:accessToken,productPrice:price};return await Interceptor.post(BACK_DOMAIN+\"/product/purchase\",productDto,{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});}catch(error){console.error(\"Error in doPurchase:\",error);throw error;}}};export default AxiosApi;export const getSearchedArtists=async searchQuery=>{try{// console.log(searchQuery);s\nconst response=await fetch(\"\".concat(BACK_DOMAIN,\"/product/search?keyword=\").concat(searchQuery));if(!response.ok){throw new Error(\"Network fail\");}return await response.json();}catch(error){console.error(\"Fetching data failed:\",error);throw error;}};","map":{"version":3,"names":["axios","Common","CHORD8_DOMAIN","Interceptor","AxiosApi","getUserList","get","error","console","productGet","findProductById","id","response","concat","newsGet","doPurchase","price","accessToken","getAccessToken","productDto","token","productPrice","post","BACK_DOMAIN","headers","Authorization","getSearchedArtists","searchQuery","fetch","ok","Error","json"],"sources":["C:/dev/PROJECT_TOTAL/src/main/react/src/axios/ProductAxios.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport Common, { CHORD8_DOMAIN, Interceptor } from \"../utils/Common\";\r\n\r\n\r\n\r\nconst AxiosApi = {\r\n  // 회원 정보 조회\r\n  getUserList: async () => {\r\n    try {\r\n      return await axios.get(CHORD8_DOMAIN + \"/auth/userList\");\r\n    } catch (error) {\r\n      console.error(\"Error in getUserList:\", error);\r\n      throw error; // Re-throw the error for further handling if necessary\r\n    }\r\n  },\r\n\r\n  // 상품 조회\r\n  productGet: async () => {\r\n    try {\r\n      return await axios.get(CHORD8_DOMAIN + \"/product/productlist\");\r\n    } catch (error) {\r\n      console.error(\"Error in productGet:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // ID를 기준으로 상품을 찾음\r\n  findProductById: async (id) => {\r\n    try {\r\n      const response = await axios.get(CHORD8_DOMAIN + `/product/${id}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(\"Error in findProductById:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 뉴스 조회\r\n  newsGet: async () => {\r\n    try {\r\n      return await axios.get(CHORD8_DOMAIN + \"/news/newslist\");\r\n    } catch (error) {\r\n      console.error(\"Error in newsGet:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 물건 결제하기\r\n  doPurchase: async (price) => {\r\n    try {\r\n      const accessToken = Common.getAccessToken();\r\n      const productDto = {\r\n        token: accessToken,\r\n        productPrice: price,\r\n      };\r\n      return await Interceptor.post(\r\n        BACK_DOMAIN + \"/product/purchase\",\r\n        productDto,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + accessToken,\r\n          },\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error in doPurchase:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\nexport default AxiosApi;\r\n\r\nexport const getSearchedArtists = async (searchQuery) => {\r\n  try {\r\n    // console.log(searchQuery);s\r\n    const response = await fetch(\r\n      `${BACK_DOMAIN}/product/search?keyword=${searchQuery}`\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Network fail\");\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Fetching data failed:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,EAAIC,aAAa,CAAEC,WAAW,KAAQ,iBAAiB,CAIpE,KAAM,CAAAC,QAAQ,CAAG,CACf;AACAC,WAAW,CAAE,KAAAA,CAAA,GAAY,CACvB,GAAI,CACF,MAAO,MAAM,CAAAL,KAAK,CAACM,GAAG,CAACJ,aAAa,CAAG,gBAAgB,CAAC,CAC1D,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CAAE;AACf,CACF,CAAC,CAED;AACAE,UAAU,CAAE,KAAAA,CAAA,GAAY,CACtB,GAAI,CACF,MAAO,MAAM,CAAAT,KAAK,CAACM,GAAG,CAACJ,aAAa,CAAG,sBAAsB,CAAC,CAChE,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAG,eAAe,CAAE,KAAO,CAAAC,EAAE,EAAK,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACM,GAAG,CAACJ,aAAa,aAAAW,MAAA,CAAeF,EAAE,CAAE,CAAC,CAClE,MAAO,CAAAC,QAAQ,CACjB,CAAE,MAAOL,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAO,OAAO,CAAE,KAAAA,CAAA,GAAY,CACnB,GAAI,CACF,MAAO,MAAM,CAAAd,KAAK,CAACM,GAAG,CAACJ,aAAa,CAAG,gBAAgB,CAAC,CAC1D,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAQ,UAAU,CAAE,KAAO,CAAAC,KAAK,EAAK,CAC3B,GAAI,CACF,KAAM,CAAAC,WAAW,CAAGhB,MAAM,CAACiB,cAAc,CAAC,CAAC,CAC3C,KAAM,CAAAC,UAAU,CAAG,CACjBC,KAAK,CAAEH,WAAW,CAClBI,YAAY,CAAEL,KAChB,CAAC,CACD,MAAO,MAAM,CAAAb,WAAW,CAACmB,IAAI,CAC3BC,WAAW,CAAG,mBAAmB,CACjCJ,UAAU,CACV,CACEK,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCC,aAAa,CAAE,SAAS,CAAGR,WAC7B,CACF,CACF,CAAC,CACH,CAAE,MAAOV,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CACD,cAAe,CAAAH,QAAQ,CAEvB,MAAO,MAAM,CAAAsB,kBAAkB,CAAG,KAAO,CAAAC,WAAW,EAAK,CACvD,GAAI,CACF;AACA,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAgB,KAAK,IAAAf,MAAA,CACvBU,WAAW,6BAAAV,MAAA,CAA2Bc,WAAW,CACtD,CAAC,CAED,GAAI,CAACf,QAAQ,CAACiB,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,cAAc,CAAC,CACjC,CACA,MAAO,MAAM,CAAAlB,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOxB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}