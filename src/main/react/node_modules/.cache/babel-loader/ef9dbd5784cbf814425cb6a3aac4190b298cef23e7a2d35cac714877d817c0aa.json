{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/dev/PROJECT_TOTAL/src/main/react/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React,{useState}from\"react\";import MusicAxiosApi from\"../../axios/MusicAxios\";import{storage}from\"../../api/firebase\";import{useParams}from\"react-router-dom\";import{useNavigate}from\"react-router-dom\";// import firebase from \"firebase/compat/app\";\n// import \"firebase/compat/storage\";\nimport styled from\"styled-components\";import{UpdateZone,InputBox,Button,InputContainer,InputContainer02,InputContainer01,Terms,TermsTitle,Term01,Term02,SingName,Singer,Composer,Lyricist,Genre,Purpose,CategoryText,TitleText,GenreButtonBox,GenreButton,PurposeButtonBox,PurposeButton,Musicimg,Musicimg01,Musicfile,Musicfile01,TitleUploadButton,SingInfo,Lyrics,TextArea}from\"../../style/music/MusicUpdateStyle\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const UploadButton=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: #4caf50;\\n  color: white;\\n  padding: 10px 20px;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n\\n  &:hover {\\n    background-color: #45a049;\\n  }\\n\"])));const FileUploadButton=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background-color: #4caf50;\\n  color: white;\\n  padding: 10px 20px;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n\\n  &:hover {\\n    background-color: #45a049;\\n  }\\n\"])));const UpdateBox=()=>{// 입력값 정보 저장\nconst[inputSingName,setinputSingName]=useState(\"\");// 노래제목\nconst[inputSinger,setinputSinger]=useState(\"\");// 활동명\nconst[userNickName,setUserNickName]=useState(\"\");// 사용자 닉네임 상태\nconst[inputComposer,setinputComposer]=useState(\"\");// 작곡가이름\nconst[inputLyricist,setinputLyricist]=useState(\"\");// 작사가이름\nconst[selectedGenre,setSelectedGenre]=useState(\"\");// 장르선택\nconst[selectedPurpose,setSelectedPurpose]=useState(\"\");// 목적선택\nconst[inputSingInfo,setinputSingInfo]=useState(\"\");// 곡소개\nconst[inputLyrics,setinputLyrics]=useState(\"\");// 가사\nconst userBusiness=window.localStorage.getItem(\"business_num\");//앨범이미지 등록\nconst[inputimgfile,setinputimgFile]=useState(\"\");//앨범 이미지 입력값\nconst[imgfileName,setimgFileName]=useState(\"\");// 앨범 이미지 이름\nconst[url,setUrl]=useState(\"\");// 앨범 이미지 url\nconst[selectedFile,setFile]=useState(null);const[Titleimg,setTitleimg]=useState(\"\");// 앨범이미지\nconst[previewImage,setPreviewImage]=useState(null);//미리보기\n//앨범노래 등록\nconst[inputfile,setinputFile]=useState(\"\");//앨범 노래 입력값]\nconst[isOpenModal,setIsOpenModal]=useState(false);//약관동의체크\nconst[termsAgreed,setTermsAgreed]=useState(false);//등록시킨 음악 ID\nconst[musicId,setMusicId]=useState(null);const params=useParams();const navigate=useNavigate();//장르 선택 기능\nconst handleGenreSelection=genre=>{if(selectedGenre===genre){setSelectedGenre(\"\");// 이미 선택된 장르를 다시 클릭하면 선택 취소\n}else{setSelectedGenre(genre);// 선택되지 않은 장르를 선택하면 해당 장르로 변경\n}};//목적 선택 기능\nconst handlePurposeSelection=purpose=>{// 목적이 '영리'이면 모달 열기\nif(purpose===\"영리\"){setSelectedPurpose(purpose);alert(\"영리 목적은 사업자 등록이 필요합니다\");}else{setSelectedPurpose(purpose);// 선택된 목적 업데이트\n}};//이미지 업로드 함수\nconst handleFileInputChange=e=>{setFile(e.target.files[0]);};const handleUploadClick=async()=>{try{const storageRef=storage.ref();const fileRef=storageRef.child(selectedFile.name);// 파일을 업로드하고 기다립니다.\nawait fileRef.put(selectedFile);console.log(\"File uploaded successfully!\");// 다운로드 URL을 가져오고 기다립니다.\nconst url=await fileRef.getDownloadURL();console.log(\"저장경로 확인 : \"+url);// 상태를 업데이트합니다.\nsetUrl(url);}catch(error){// 에러를 처리합니다.\nconsole.error(\"Upload failed\",error);}};const handlefileUploadClick=async()=>{try{const storageRef=storage.ref();const fileRef=storageRef.child(selectedFile.name);// 파일을 업로드하고 기다립니다.\nawait fileRef.put(selectedFile);console.log(\"File uploaded successfully!\");// 다운로드 URL을 가져오고 기다립니다.\nconst inputfile=await fileRef.getDownloadURL();console.log(\"저장경로 확인: \"+inputfile);// 상태를 업데이트합니다.\nsetinputFile(inputfile);}catch(error){// 에러를 처리합니다.\nconsole.error(\"Upload failed\",error);}};// 음악 등록 버튼 활성화 여부\nconst isMusicUploadEnabled=inputSingName&&inputSinger&&inputComposer&&inputLyricist&&selectedGenre&&selectedPurpose&&inputSingInfo&&inputLyrics&&termsAgreed;// 음악 등록 버튼 클릭시 실행되는 함수[등록방식 까먹지 말기..]\nconst onClickSetMusic=async()=>{if(isMusicUploadEnabled){if(!termsAgreed){alert(\"약관에 동의해주세요.\");return;}try{const MusicUploadData=await MusicAxiosApi.addMusic(inputSingName,inputSinger,inputComposer,inputLyricist,selectedGenre,inputSingInfo,inputLyrics,url,inputfile);console.log(\"음악 등록 결과:\",MusicUploadData);const id=MusicUploadData.id;// 음악 등록 성공 시 알림창 표시\nif(window.confirm(\"음악이 성공적으로 등록되었습니다. 음악 리스트로 이동하시겠습니까?\")){navigate(\"/music-list\");// 확인을 누를 경우 music-list 페이지로 이동\n}}catch(error){alert(\"음악 등록 중 오류가 발생했습니다.\");console.error(\"음악 등록 오류:\",error.message);}}else{alert(\"빠진 입력 사항이 없는지 확인해주세요.\");console.error(\"음악 등록이 불가능합니다. 필수 입력값을 확인해주세요.\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(UpdateZone,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uC74C\\uC6D0 \\uB4F1\\uB85D\\uD558\\uAE30\"}),/*#__PURE__*/_jsxs(InputContainer,{children:[/*#__PURE__*/_jsxs(InputContainer01,{children:[/*#__PURE__*/_jsxs(SingName,{children:[/*#__PURE__*/_jsx(CategoryText,{children:\"\\uB178\\uB798\\uBA85\"}),/*#__PURE__*/_jsx(InputBox,{placeholder:\"\\uB4F1\\uB85D\\uD560 \\uB178\\uB798 \\uC81C\\uBAA9 \\uC785\\uB825\",value:inputSingName,onChange:e=>setinputSingName(e.target.value)}),inputSingName.length>0&&inputSingName.length<8]}),/*#__PURE__*/_jsxs(Singer,{children:[/*#__PURE__*/_jsx(CategoryText,{children:\"\\uAC00\\uC218\"}),/*#__PURE__*/_jsx(InputBox,{placeholder:\"\\uC5EC\\uB7EC\\uBD84\\uC758 \\uB2C9\\uB124\\uC784\\uC744 \\uC801\\uC5B4\\uC8FC\\uC138\\uC694\"//유저닉네임\n,value:inputSinger,onChange:e=>setinputSinger(e.target.value)}),inputSinger.length>0&&inputSinger.length<8]}),/*#__PURE__*/_jsxs(Composer,{children:[/*#__PURE__*/_jsx(CategoryText,{children:\"\\uC791\\uACE1\\uAC00\"}),/*#__PURE__*/_jsx(InputBox,{placeholder:\"\\uC791\\uACE1\\uAC00 \\uC774\\uB984 \\uC785\\uB825\",value:inputComposer,onChange:e=>setinputComposer(e.target.value)}),inputComposer.length>0&&inputComposer.length<8]}),/*#__PURE__*/_jsxs(Lyricist,{children:[/*#__PURE__*/_jsx(CategoryText,{children:\"\\uC791\\uC0AC\\uAC00\"}),/*#__PURE__*/_jsx(InputBox,{placeholder:\"\\uC791\\uC0AC\\uAC00 \\uC774\\uB984 \\uC785\\uB825\",value:inputLyricist,onChange:e=>setinputLyricist(e.target.value)}),inputLyricist.length>0]}),/*#__PURE__*/_jsxs(Genre,{children:[/*#__PURE__*/_jsx(CategoryText,{children:\"\\uC7A5\\uB974\"}),/*#__PURE__*/_jsxs(GenreButtonBox,{children:[/*#__PURE__*/_jsx(GenreButton,{onClick:()=>handleGenreSelection(\"발라드\"),active:selectedGenre===\"발라드\"?\"selected\":\"\",children:\"\\uBC1C\\uB77C\\uB4DC\"}),/*#__PURE__*/_jsx(GenreButton,{onClick:()=>handleGenreSelection(\"락/메탈\"),active:selectedGenre===\"락/메탈\"?\"selected\":\"\",children:\"\\uB77D/\\uBA54\\uD0C8\"}),/*#__PURE__*/_jsx(GenreButton,{onClick:()=>handleGenreSelection(\"포크/블루스\"),active:selectedGenre===\"포크/블루스\"?\"selected\":\"\",children:\"\\uD3EC\\uD06C/\\uBE14\\uB8E8\\uC2A4\"}),/*#__PURE__*/_jsx(GenreButton,{onClick:()=>handleGenreSelection(\"R&B/SOUL\"),active:selectedGenre===\"R&B/SOUL\"?\"selected\":\"\",children:\"R&B/SOUL\"}),/*#__PURE__*/_jsx(GenreButton,{onClick:()=>handleGenreSelection(\"힙합/랩\"),active:selectedGenre===\"힙합/랩\"?\"selected\":\"\",children:\"\\uD799\\uD569/\\uB7A9\"}),/*#__PURE__*/_jsx(GenreButton,{onClick:()=>handleGenreSelection(\"어쿠스틱\"),active:selectedGenre===\"어쿠스틱\"?\"selected\":\"\",children:\"\\uC5B4\\uCFE0\\uC2A4\\uD2F1\"}),/*#__PURE__*/_jsx(GenreButton,{onClick:()=>handleGenreSelection(\"트로트\"),active:selectedGenre===\"트로트\"?\"selected\":\"\",children:\"\\uD2B8\\uB85C\\uD2B8\"}),/*#__PURE__*/_jsx(GenreButton,{onClick:()=>handleGenreSelection(\"기타\"),active:selectedGenre===\"기타\"?\"selected\":\"\",children:\"\\uAE30\\uD0C0\"})]})]}),/*#__PURE__*/_jsxs(Purpose,{children:[/*#__PURE__*/_jsx(CategoryText,{children:\"\\uBAA9\\uC801\"}),/*#__PURE__*/_jsxs(PurposeButtonBox,{children:[/*#__PURE__*/_jsx(PurposeButton,{onClick:()=>handlePurposeSelection(\"영리\"),active:selectedPurpose===\"영리\"?\"selected\":\"\",children:\"\\uC601\\uB9AC\"}),/*#__PURE__*/_jsx(PurposeButton,{onClick:()=>handlePurposeSelection(\"비영리\"),active:selectedPurpose===\"비영리\"?\"selected\":\"\",children:\"\\uBE44\\uC601\\uB9AC\"})]})]})]}),/*#__PURE__*/_jsxs(InputContainer02,{children:[/*#__PURE__*/_jsxs(Musicimg,{children:[/*#__PURE__*/_jsxs(Musicimg01,{children:[/*#__PURE__*/_jsx(TitleText,{children:\"\\uD0C0\\uC774\\uD2C0 \\uC774\\uBBF8\\uC9C0\"}),/*#__PURE__*/_jsx(InputBox,{type:\"file\",onChange:handleFileInputChange})]}),/*#__PURE__*/_jsx(UploadButton,{onClick:handleUploadClick,children:\"Upload\"})]}),/*#__PURE__*/_jsxs(Musicfile,{children:[/*#__PURE__*/_jsxs(Musicfile01,{children:[/*#__PURE__*/_jsx(TitleText,{children:\"\\uC74C\\uC6D0\\uB4F1\\uB85D\"}),/*#__PURE__*/_jsx(InputBox,{type:\"file\",onChange:handleFileInputChange})]}),/*#__PURE__*/_jsx(FileUploadButton,{onClick:handlefileUploadClick,children:\"Upload\"})]}),/*#__PURE__*/_jsxs(SingInfo,{children:[/*#__PURE__*/_jsx(CategoryText,{children:\"\\uACE1\\uC18C\\uAC1C\"}),/*#__PURE__*/_jsx(InputBox,{placeholder:\"\\uACE1\\uC5D0 \\uB300\\uD55C \\uAC04\\uB7B5\\uD55C \\uC124\\uBA85\",value:inputSingInfo,onChange:e=>setinputSingInfo(e.target.value)}),inputSingInfo.length>0&&inputSingInfo.length<30]}),/*#__PURE__*/_jsxs(Lyrics,{children:[/*#__PURE__*/_jsx(CategoryText,{children:\"\\uAC00\\uC0AC\"}),/*#__PURE__*/_jsx(TextArea,{placeholder:\"\\uAC00\\uC0AC\\uB97C \\uB4F1\\uB85D\\uD574\\uC8FC\\uC138\\uC694\",value:inputLyrics,onChange:e=>setinputLyrics(e.target.value)}),inputLyrics.length>0&&inputLyrics.length<2000]})]}),/*#__PURE__*/_jsxs(Terms,{children:[/*#__PURE__*/_jsx(TermsTitle,{children:\"\\uC57D\\uAD00\\uB3D9\\uC758\"}),/*#__PURE__*/_jsxs(Term01,{children:[\"\\uC11C\\uBE44\\uC2A4 \\uC774\\uC6A9 \\uBC0F \\uC800\\uC791\\uAD8C \\uAD00\\uB828 \\uC57D\\uAD00\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:termsAgreed,onChange:e=>setTermsAgreed(e.target.checked)})]}),/*#__PURE__*/_jsxs(Term02,{children:[\"\\uD310\\uB9E4\\uC218\\uC775 \\uC9C0\\uAE09 \\uBC0F \\uBD84\\uBC30 \\uB3D9\\uC758\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:termsAgreed,onChange:e=>setTermsAgreed(e.target.checked)})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"buttonContainer\",children:/*#__PURE__*/_jsx(Button,{enabled:isMusicUploadEnabled,onClick:onClickSetMusic,children:\"\\uB4F1\\uB85D\\uD558\\uAE30\"})})]})});};export default UpdateBox;","map":{"version":3,"names":["React","useState","MusicAxiosApi","storage","useParams","useNavigate","styled","UpdateZone","InputBox","Button","InputContainer","InputContainer02","InputContainer01","Terms","TermsTitle","Term01","Term02","SingName","Singer","Composer","Lyricist","Genre","Purpose","CategoryText","TitleText","GenreButtonBox","GenreButton","PurposeButtonBox","PurposeButton","Musicimg","Musicimg01","Musicfile","Musicfile01","TitleUploadButton","SingInfo","Lyrics","TextArea","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UploadButton","button","_templateObject","_taggedTemplateLiteral","FileUploadButton","_templateObject2","UpdateBox","inputSingName","setinputSingName","inputSinger","setinputSinger","userNickName","setUserNickName","inputComposer","setinputComposer","inputLyricist","setinputLyricist","selectedGenre","setSelectedGenre","selectedPurpose","setSelectedPurpose","inputSingInfo","setinputSingInfo","inputLyrics","setinputLyrics","userBusiness","window","localStorage","getItem","inputimgfile","setinputimgFile","imgfileName","setimgFileName","url","setUrl","selectedFile","setFile","Titleimg","setTitleimg","previewImage","setPreviewImage","inputfile","setinputFile","isOpenModal","setIsOpenModal","termsAgreed","setTermsAgreed","musicId","setMusicId","params","navigate","handleGenreSelection","genre","handlePurposeSelection","purpose","alert","handleFileInputChange","e","target","files","handleUploadClick","storageRef","ref","fileRef","child","name","put","console","log","getDownloadURL","error","handlefileUploadClick","isMusicUploadEnabled","onClickSetMusic","MusicUploadData","addMusic","id","confirm","message","children","placeholder","value","onChange","length","onClick","active","type","checked","className","enabled"],"sources":["C:/dev/PROJECT_TOTAL/src/main/react/src/component/musicList/UpdateBox.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport MusicAxiosApi from \"../../axios/MusicAxios\";\r\nimport { storage } from \"../../api/firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import firebase from \"firebase/compat/app\";\r\n// import \"firebase/compat/storage\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  UpdateZone,\r\n  InputBox,\r\n  Button,\r\n  InputContainer,\r\n  InputContainer02,\r\n  InputContainer01,\r\n  Terms,\r\n  TermsTitle,\r\n  Term01,\r\n  Term02,\r\n  SingName,\r\n  Singer,\r\n  Composer,\r\n  Lyricist,\r\n  Genre,\r\n  Purpose,\r\n  CategoryText,\r\n  TitleText,\r\n  GenreButtonBox,\r\n  GenreButton,\r\n  PurposeButtonBox,\r\n  PurposeButton,\r\n  Musicimg,\r\n  Musicimg01,\r\n  Musicfile,\r\n  Musicfile01,\r\n  TitleUploadButton,\r\n  SingInfo,\r\n  Lyrics,\r\n  TextArea,\r\n} from \"../../style/music/MusicUpdateStyle\";\r\n\r\nconst UploadButton = styled.button`\r\n  background-color: #4caf50;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #45a049;\r\n  }\r\n`;\r\n\r\nconst FileUploadButton = styled.button`\r\n  background-color: #4caf50;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #45a049;\r\n  }\r\n`;\r\n\r\nconst UpdateBox = () => {\r\n  // 입력값 정보 저장\r\n  const [inputSingName, setinputSingName] = useState(\"\"); // 노래제목\r\n  const [inputSinger, setinputSinger] = useState(\"\"); // 활동명\r\n  const [userNickName, setUserNickName] = useState(\"\"); // 사용자 닉네임 상태\r\n  const [inputComposer, setinputComposer] = useState(\"\"); // 작곡가이름\r\n  const [inputLyricist, setinputLyricist] = useState(\"\"); // 작사가이름\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // 장르선택\r\n  const [selectedPurpose, setSelectedPurpose] = useState(\"\"); // 목적선택\r\n  const [inputSingInfo, setinputSingInfo] = useState(\"\"); // 곡소개\r\n  const [inputLyrics, setinputLyrics] = useState(\"\"); // 가사\r\n  const userBusiness = window.localStorage.getItem(\"business_num\");\r\n  //앨범이미지 등록\r\n  const [inputimgfile, setinputimgFile] = useState(\"\"); //앨범 이미지 입력값\r\n  const [imgfileName, setimgFileName] = useState(\"\"); // 앨범 이미지 이름\r\n  const [url, setUrl] = useState(\"\"); // 앨범 이미지 url\r\n  const [selectedFile, setFile] = useState(null);\r\n  const [Titleimg, setTitleimg] = useState(\"\"); // 앨범이미지\r\n  const [previewImage, setPreviewImage] = useState(null); //미리보기\r\n\r\n  //앨범노래 등록\r\n  const [inputfile, setinputFile] = useState(\"\"); //앨범 노래 입력값]\r\n\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  //약관동의체크\r\n  const [termsAgreed, setTermsAgreed] = useState(false);\r\n\r\n  //등록시킨 음악 ID\r\n  const [musicId, setMusicId] = useState(null);\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  //장르 선택 기능\r\n  const handleGenreSelection = (genre) => {\r\n    if (selectedGenre === genre) {\r\n      setSelectedGenre(\"\"); // 이미 선택된 장르를 다시 클릭하면 선택 취소\r\n    } else {\r\n      setSelectedGenre(genre); // 선택되지 않은 장르를 선택하면 해당 장르로 변경\r\n    }\r\n  };\r\n\r\n  //목적 선택 기능\r\n  const handlePurposeSelection = (purpose) => {\r\n    // 목적이 '영리'이면 모달 열기\r\n    if (purpose === \"영리\") {\r\n      setSelectedPurpose(purpose);\r\n      alert(\"영리 목적은 사업자 등록이 필요합니다\");\r\n    } else {\r\n      setSelectedPurpose(purpose); // 선택된 목적 업데이트\r\n    }\r\n  };\r\n\r\n  //이미지 업로드 함수\r\n  const handleFileInputChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUploadClick = async () => {\r\n    try {\r\n      const storageRef = storage.ref();\r\n      const fileRef = storageRef.child(selectedFile.name);\r\n\r\n      // 파일을 업로드하고 기다립니다.\r\n      await fileRef.put(selectedFile);\r\n      console.log(\"File uploaded successfully!\");\r\n\r\n      // 다운로드 URL을 가져오고 기다립니다.\r\n      const url = await fileRef.getDownloadURL();\r\n\r\n      console.log(\"저장경로 확인 : \" + url);\r\n\r\n      // 상태를 업데이트합니다.\r\n      setUrl(url);\r\n    } catch (error) {\r\n      // 에러를 처리합니다.\r\n      console.error(\"Upload failed\", error);\r\n    }\r\n  };\r\n\r\n  const handlefileUploadClick = async () => {\r\n    try {\r\n      const storageRef = storage.ref();\r\n      const fileRef = storageRef.child(selectedFile.name);\r\n\r\n      // 파일을 업로드하고 기다립니다.\r\n      await fileRef.put(selectedFile);\r\n      console.log(\"File uploaded successfully!\");\r\n\r\n      // 다운로드 URL을 가져오고 기다립니다.\r\n\r\n      const inputfile = await fileRef.getDownloadURL();\r\n      console.log(\"저장경로 확인: \" + inputfile);\r\n\r\n      // 상태를 업데이트합니다.\r\n\r\n      setinputFile(inputfile);\r\n    } catch (error) {\r\n      // 에러를 처리합니다.\r\n      console.error(\"Upload failed\", error);\r\n    }\r\n  };\r\n\r\n  // 음악 등록 버튼 활성화 여부\r\n  const isMusicUploadEnabled =\r\n    inputSingName &&\r\n    inputSinger &&\r\n    inputComposer &&\r\n    inputLyricist &&\r\n    selectedGenre &&\r\n    selectedPurpose &&\r\n    inputSingInfo &&\r\n    inputLyrics &&\r\n    termsAgreed;\r\n\r\n  // 음악 등록 버튼 클릭시 실행되는 함수[등록방식 까먹지 말기..]\r\n  const onClickSetMusic = async () => {\r\n    if (isMusicUploadEnabled) {\r\n      if (!termsAgreed) {\r\n        alert(\"약관에 동의해주세요.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const MusicUploadData = await MusicAxiosApi.addMusic(\r\n          inputSingName,\r\n          inputSinger,\r\n          inputComposer,\r\n          inputLyricist,\r\n          selectedGenre,\r\n          inputSingInfo,\r\n          inputLyrics,\r\n          url,\r\n          inputfile\r\n        );\r\n        console.log(\"음악 등록 결과:\", MusicUploadData);\r\n        const id = MusicUploadData.id;\r\n\r\n        // 음악 등록 성공 시 알림창 표시\r\n        if (\r\n          window.confirm(\r\n            \"음악이 성공적으로 등록되었습니다. 음악 리스트로 이동하시겠습니까?\"\r\n          )\r\n        ) {\r\n          navigate(\"/music-list\"); // 확인을 누를 경우 music-list 페이지로 이동\r\n        }\r\n      } catch (error) {\r\n        alert(\"음악 등록 중 오류가 발생했습니다.\");\r\n        console.error(\"음악 등록 오류:\", error.message);\r\n      }\r\n    } else {\r\n      alert(\"빠진 입력 사항이 없는지 확인해주세요.\");\r\n      console.error(\"음악 등록이 불가능합니다. 필수 입력값을 확인해주세요.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UpdateZone>\r\n        <h1>음원 등록하기</h1>\r\n        <InputContainer>\r\n          <InputContainer01>\r\n            <SingName>\r\n              <CategoryText>노래명</CategoryText>\r\n              <InputBox\r\n                placeholder=\"등록할 노래 제목 입력\"\r\n                value={inputSingName}\r\n                onChange={(e) => setinputSingName(e.target.value)}\r\n              />\r\n              {inputSingName.length > 0 && inputSingName.length < 8}\r\n            </SingName>\r\n\r\n            <Singer>\r\n              <CategoryText>가수</CategoryText>\r\n              <InputBox\r\n                placeholder=\"여러분의 닉네임을 적어주세요\" //유저닉네임\r\n                value={inputSinger}\r\n                onChange={(e) => setinputSinger(e.target.value)}\r\n              />\r\n              {inputSinger.length > 0 && inputSinger.length < 8}\r\n            </Singer>\r\n\r\n            <Composer>\r\n              <CategoryText>작곡가</CategoryText>\r\n              <InputBox\r\n                placeholder=\"작곡가 이름 입력\"\r\n                value={inputComposer}\r\n                onChange={(e) => setinputComposer(e.target.value)}\r\n              />\r\n              {inputComposer.length > 0 && inputComposer.length < 8}\r\n            </Composer>\r\n\r\n            <Lyricist>\r\n              <CategoryText>작사가</CategoryText>\r\n              <InputBox\r\n                placeholder=\"작사가 이름 입력\"\r\n                value={inputLyricist}\r\n                onChange={(e) => setinputLyricist(e.target.value)}\r\n              />\r\n              {inputLyricist.length > 0}\r\n            </Lyricist>\r\n\r\n            <Genre>\r\n              <CategoryText>장르</CategoryText>\r\n              <GenreButtonBox>\r\n                <GenreButton\r\n                  onClick={() => handleGenreSelection(\"발라드\")}\r\n                  active={selectedGenre === \"발라드\" ? \"selected\" : \"\"}\r\n                >\r\n                  발라드\r\n                </GenreButton>\r\n                <GenreButton\r\n                  onClick={() => handleGenreSelection(\"락/메탈\")}\r\n                  active={selectedGenre === \"락/메탈\" ? \"selected\" : \"\"}\r\n                >\r\n                  락/메탈\r\n                </GenreButton>\r\n                <GenreButton\r\n                  onClick={() => handleGenreSelection(\"포크/블루스\")}\r\n                  active={selectedGenre === \"포크/블루스\" ? \"selected\" : \"\"}\r\n                >\r\n                  포크/블루스\r\n                </GenreButton>\r\n                <GenreButton\r\n                  onClick={() => handleGenreSelection(\"R&B/SOUL\")}\r\n                  active={selectedGenre === \"R&B/SOUL\" ? \"selected\" : \"\"}\r\n                >\r\n                  R&B/SOUL\r\n                </GenreButton>\r\n                <GenreButton\r\n                  onClick={() => handleGenreSelection(\"힙합/랩\")}\r\n                  active={selectedGenre === \"힙합/랩\" ? \"selected\" : \"\"}\r\n                >\r\n                  힙합/랩\r\n                </GenreButton>\r\n                <GenreButton\r\n                  onClick={() => handleGenreSelection(\"어쿠스틱\")}\r\n                  active={selectedGenre === \"어쿠스틱\" ? \"selected\" : \"\"}\r\n                >\r\n                  어쿠스틱\r\n                </GenreButton>\r\n                <GenreButton\r\n                  onClick={() => handleGenreSelection(\"트로트\")}\r\n                  active={selectedGenre === \"트로트\" ? \"selected\" : \"\"}\r\n                >\r\n                  트로트\r\n                </GenreButton>\r\n                <GenreButton\r\n                  onClick={() => handleGenreSelection(\"기타\")}\r\n                  active={selectedGenre === \"기타\" ? \"selected\" : \"\"}\r\n                >\r\n                  기타\r\n                </GenreButton>\r\n              </GenreButtonBox>\r\n            </Genre>\r\n\r\n            <Purpose>\r\n              <CategoryText>목적</CategoryText>\r\n              <PurposeButtonBox>\r\n                <PurposeButton\r\n                  onClick={() => handlePurposeSelection(\"영리\")}\r\n                  active={selectedPurpose === \"영리\" ? \"selected\" : \"\"}\r\n                >\r\n                  영리\r\n                </PurposeButton>\r\n\r\n                <PurposeButton\r\n                  onClick={() => handlePurposeSelection(\"비영리\")}\r\n                  active={selectedPurpose === \"비영리\" ? \"selected\" : \"\"}\r\n                >\r\n                  비영리\r\n                </PurposeButton>\r\n              </PurposeButtonBox>\r\n            </Purpose>\r\n          </InputContainer01>\r\n\r\n          <InputContainer02>\r\n            <Musicimg>\r\n              <Musicimg01>\r\n                <TitleText>타이틀 이미지</TitleText>\r\n                <InputBox type=\"file\" onChange={handleFileInputChange} />\r\n              </Musicimg01>\r\n              <UploadButton onClick={handleUploadClick}>Upload</UploadButton>\r\n              {/* <TitleUploadButton onClick={handleUploadClick}>\r\n                업로드\r\n              </TitleUploadButton> */}\r\n            </Musicimg>\r\n\r\n            <Musicfile>\r\n              <Musicfile01>\r\n                <TitleText>음원등록</TitleText>\r\n                <InputBox type=\"file\" onChange={handleFileInputChange} />\r\n              </Musicfile01>\r\n              <FileUploadButton onClick={handlefileUploadClick}>\r\n                Upload\r\n              </FileUploadButton>\r\n              {/* <TitleUploadButton onClick={handleUploadClick}>\r\n                업로드\r\n              </TitleUploadButton> */}\r\n            </Musicfile>\r\n\r\n            <SingInfo>\r\n              <CategoryText>곡소개</CategoryText>\r\n              <InputBox\r\n                placeholder=\"곡에 대한 간략한 설명\"\r\n                value={inputSingInfo}\r\n                onChange={(e) => setinputSingInfo(e.target.value)}\r\n              />\r\n              {inputSingInfo.length > 0 && inputSingInfo.length < 30}\r\n            </SingInfo>\r\n\r\n            <Lyrics>\r\n              <CategoryText>가사</CategoryText>\r\n              <TextArea\r\n                placeholder=\"가사를 등록해주세요\"\r\n                value={inputLyrics}\r\n                onChange={(e) => setinputLyrics(e.target.value)}\r\n              />\r\n              {inputLyrics.length > 0 && inputLyrics.length < 2000}\r\n            </Lyrics>\r\n          </InputContainer02>\r\n\r\n          <Terms>\r\n            <TermsTitle>약관동의</TermsTitle>\r\n            <Term01>\r\n              서비스 이용 및 저작권 관련 약관\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={termsAgreed}\r\n                onChange={(e) => setTermsAgreed(e.target.checked)}\r\n              />\r\n            </Term01>\r\n\r\n            <Term02>\r\n              판매수익 지급 및 분배 동의\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={termsAgreed}\r\n                onChange={(e) => setTermsAgreed(e.target.checked)}\r\n              />\r\n            </Term02>\r\n          </Terms>\r\n        </InputContainer>\r\n\r\n        {/* 등록 버튼 */}\r\n        <div className=\"buttonContainer\">\r\n          <Button enabled={isMusicUploadEnabled} onClick={onClickSetMusic}>\r\n            등록하기\r\n          </Button>\r\n        </div>\r\n      </UpdateZone>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}