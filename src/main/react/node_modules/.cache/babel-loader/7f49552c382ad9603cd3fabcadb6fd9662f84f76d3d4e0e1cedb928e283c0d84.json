{"ast":null,"code":"import{useEffect}from\"react\";import SignUpAxios from\"../axios/SignUpAxios\";import{useNavigate}from\"react-router-dom\";import Common from\"../utils/Common\";const KakaoLogin=()=>{const usenavigator=useNavigate();const params=new URLSearchParams(window.location.search);const code=params.get(\"code\");// 카카오 인증 코드가 변경 될 때, 실행\nuseEffect(()=>{handleKakao();},[code]);// 카카오 이메일을 발급받고 토큰 발급\nconst handleKakao=async()=>{console.log(\"코드의 값 : \",code);try{const res=await SignUpAxios.kakaoLogin(code);if(res.status===200){console.log(\"카카오 로그인 : \",res);const kakao=res.data;console.log(\"카카오 이메일 : \",kakao);window.localStorage.setItem(\"email\",kakao);const response=await SignUpAxios.checkEmail(kakao);console.log(\"카카오 이메일 중복 체크\",response);if(response.data===true){// 아이디 존재 => main 페이지로 이동 및 토큰 발급\n// 카카오 로그인 토큰 발급\nconst kakaoRes=await SignUpAxios.kakaoToken(kakao);console.log(\"카카오 토큰\",kakaoRes);Common.setAccessToken(kakaoRes.data.accessToken);Common.setRefreshToken(kakaoRes.data.refreshToken);alert(\"로그인 성공\");usenavigator(\"/\");}else{// 아이디 존재 x => 회원 가입\nalert(\"회원 가입이 필요합니다.\");usenavigator(\"/signup\");}// 이메일 저장\n// window.localStorage.setItem(\"email\", kakao);\n}else{alert(\"로그인 정보를 확인 하시오.\");}}catch(error){console.log(\"카카오 로그인 연결 실패 : \",error);}};};export default KakaoLogin;","map":{"version":3,"names":["useEffect","SignUpAxios","useNavigate","Common","KakaoLogin","usenavigator","params","URLSearchParams","window","location","search","code","get","handleKakao","console","log","res","kakaoLogin","status","kakao","data","localStorage","setItem","response","checkEmail","kakaoRes","kakaoToken","setAccessToken","accessToken","setRefreshToken","refreshToken","alert","error"],"sources":["C:/dev/PROJECT_TOTAL/src/main/react/src/api/KakaoLoginApi.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport SignUpAxios from \"../axios/SignUpAxios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Common from \"../utils/Common\";\r\n\r\nconst KakaoLogin = () => {\r\n  const usenavigator = useNavigate();\r\n\r\n  const params = new URLSearchParams(window.location.search);\r\n  const code = params.get(\"code\");\r\n\r\n  // 카카오 인증 코드가 변경 될 때, 실행\r\n  useEffect(() => {\r\n    handleKakao();\r\n  }, [code]);\r\n\r\n  // 카카오 이메일을 발급받고 토큰 발급\r\n  const handleKakao = async () => {\r\n    console.log(\"코드의 값 : \", code);\r\n    try {\r\n      const res = await SignUpAxios.kakaoLogin(code);\r\n      if (res.status === 200) {\r\n        console.log(\"카카오 로그인 : \", res);\r\n        const kakao = res.data;\r\n        console.log(\"카카오 이메일 : \", kakao);\r\n        window.localStorage.setItem(\"email\", kakao);\r\n        const response = await SignUpAxios.checkEmail(kakao);\r\n        console.log(\"카카오 이메일 중복 체크\", response);\r\n        if (response.data === true) {\r\n          // 아이디 존재 => main 페이지로 이동 및 토큰 발급\r\n          // 카카오 로그인 토큰 발급\r\n          const kakaoRes = await SignUpAxios.kakaoToken(kakao);\r\n          console.log(\"카카오 토큰\", kakaoRes);\r\n          Common.setAccessToken(kakaoRes.data.accessToken);\r\n          Common.setRefreshToken(kakaoRes.data.refreshToken);\r\n          alert(\"로그인 성공\");\r\n          usenavigator(\"/\");\r\n        } else {\r\n          // 아이디 존재 x => 회원 가입\r\n          alert(\"회원 가입이 필요합니다.\");\r\n          usenavigator(\"/signup\");\r\n        }\r\n        // 이메일 저장\r\n        // window.localStorage.setItem(\"email\", kakao);\r\n      } else {\r\n        alert(\"로그인 정보를 확인 하시오.\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"카카오 로그인 연결 실패 : \", error);\r\n    }\r\n  };\r\n};\r\n\r\nexport default KakaoLogin;\r\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,MAAO,CAAAC,WAAW,KAAM,sBAAsB,CAC9C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,MAAM,KAAM,iBAAiB,CAEpC,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAAC,YAAY,CAAGH,WAAW,CAAC,CAAC,CAElC,KAAM,CAAAI,MAAM,CAAG,GAAI,CAAAC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAC1D,KAAM,CAAAC,IAAI,CAAGL,MAAM,CAACM,GAAG,CAAC,MAAM,CAAC,CAE/B;AACAZ,SAAS,CAAC,IAAM,CACda,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,CAACF,IAAI,CAAC,CAAC,CAEV;AACA,KAAM,CAAAE,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9BC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEJ,IAAI,CAAC,CAC7B,GAAI,CACF,KAAM,CAAAK,GAAG,CAAG,KAAM,CAAAf,WAAW,CAACgB,UAAU,CAACN,IAAI,CAAC,CAC9C,GAAIK,GAAG,CAACE,MAAM,GAAK,GAAG,CAAE,CACtBJ,OAAO,CAACC,GAAG,CAAC,YAAY,CAAEC,GAAG,CAAC,CAC9B,KAAM,CAAAG,KAAK,CAAGH,GAAG,CAACI,IAAI,CACtBN,OAAO,CAACC,GAAG,CAAC,YAAY,CAAEI,KAAK,CAAC,CAChCX,MAAM,CAACa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,KAAK,CAAC,CAC3C,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAtB,WAAW,CAACuB,UAAU,CAACL,KAAK,CAAC,CACpDL,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEQ,QAAQ,CAAC,CACtC,GAAIA,QAAQ,CAACH,IAAI,GAAK,IAAI,CAAE,CAC1B;AACA;AACA,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAxB,WAAW,CAACyB,UAAU,CAACP,KAAK,CAAC,CACpDL,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEU,QAAQ,CAAC,CAC/BtB,MAAM,CAACwB,cAAc,CAACF,QAAQ,CAACL,IAAI,CAACQ,WAAW,CAAC,CAChDzB,MAAM,CAAC0B,eAAe,CAACJ,QAAQ,CAACL,IAAI,CAACU,YAAY,CAAC,CAClDC,KAAK,CAAC,QAAQ,CAAC,CACf1B,YAAY,CAAC,GAAG,CAAC,CACnB,CAAC,IAAM,CACL;AACA0B,KAAK,CAAC,eAAe,CAAC,CACtB1B,YAAY,CAAC,SAAS,CAAC,CACzB,CACA;AACA;AACF,CAAC,IAAM,CACL0B,KAAK,CAAC,iBAAiB,CAAC,CAC1B,CACF,CAAE,MAAOC,KAAK,CAAE,CACdlB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEiB,KAAK,CAAC,CACxC,CACF,CAAC,CACH,CAAC,CAED,cAAe,CAAA5B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}