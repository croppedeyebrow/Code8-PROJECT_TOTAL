{"ast":null,"code":"import AxiosApi from\"../../axios/ProductAxios\";import{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{useCart}from'../../context/CartContext';import{ProuctPrice,ProuctName,ProductContainer,GridContainer,GridItem}from\"../../style/Product/Product-Layout\";import{BtnShape,ClickBtn,TotalAmount,Totality,Quantity,QuantityText,FreeShipping,ItemContainer,ImgContainer,CalContainer,ProductName,ProductPrice}from\"../../style/Product/Product-Detail\";import ProductItemCnt from\"./ProductItemCnt\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const ProductListPage=_ref=>{let{selectedArtist,products,setProducts}=_ref;const navigate=useNavigate();const[selectedProduct,setSelectedProduct]=useState(null);// 선택된 제품 상태\nconst[count,setCount]=useState(1);// 상품 수량 관리\nconst{addToCart}=useCart();// 상품 수량 변경 핸들러\nconst handleQuantityChange=newQuantity=>{if(!isNaN(newQuantity)&&newQuantity>0){setCount(newQuantity);}else{setCount(1);// 기본값 설정 또는 다른 오류 처리\n}};const totalPrice=selectedProduct?parseInt(selectedProduct.productPrice.replace(/,/g,''))*count:0;const formattedTotalPrice=totalPrice.toLocaleString();// 구매 처리 함수\nconst handlePurchase=()=>{console.log({productName:selectedProduct.productName,quantity:count,totalPrice:formattedTotalPrice});const productDetails={...selectedProduct,quantity:count,totalPrice:totalPrice};navigate('/orderform',{state:productDetails});};useEffect(()=>{productList();},[selectedArtist]);const handleAddToCart=()=>{console.log(\"Adding to cart:\",selectedProduct);// \naddToCart(selectedProduct,count,totalPrice);navigate('/cart');};const productList=async()=>{try{const response=await AxiosApi.productGet();let data=response.data;if(selectedArtist){data=data.filter(product=>product.artistName===selectedArtist);}setProducts(data);}catch(error){console.error('데이터를 불러오는데 실패했습니다',error);}};useEffect(()=>{productList();},[]);const handleProductClick=productId=>{const product=products.find(p=>p.productId===productId);setSelectedProduct(product);};return/*#__PURE__*/_jsx(_Fragment,{children:selectedProduct?/*#__PURE__*/_jsxs(ItemContainer,{children:[/*#__PURE__*/_jsx(ImgContainer,{children:/*#__PURE__*/_jsx(\"img\",{alt:\"productimg\",src:selectedProduct.productImage,style:{width:\"38rem\",height:\"38rem\"}})}),/*#__PURE__*/_jsxs(CalContainer,{children:[/*#__PURE__*/_jsx(ProductName,{children:selectedProduct.productName}),/*#__PURE__*/_jsxs(ProductPrice,{children:[selectedProduct.productPrice,\"\\uC6D0\"]}),/*#__PURE__*/_jsx(FreeShipping,{children:\"\\uBB34\\uB8CC\\uBC30\\uC1A1\"}),/*#__PURE__*/_jsxs(Quantity,{children:[/*#__PURE__*/_jsx(QuantityText,{children:\"\\uC218\\uB7C9\"}),/*#__PURE__*/_jsx(ProductItemCnt,{count:count,onCountChange:handleQuantityChange})]}),/*#__PURE__*/_jsxs(Totality,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[count,\"\\uAC1C \\uC0C1\\uD488 \\uAE08\\uC561 \"]}),/*#__PURE__*/_jsxs(TotalAmount,{children:[formattedTotalPrice,\" \\uC6D0\"]})]}),/*#__PURE__*/_jsx(BtnShape,{children:/*#__PURE__*/_jsx(ClickBtn,{onClick:handleAddToCart,children:\"\\uC7A5\\uBC14\\uAD6C\\uB2C8 \\uB2F4\\uAE30\"})}),/*#__PURE__*/_jsx(\"div\",{})]})]}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ProductContainer,{children:/*#__PURE__*/_jsx(GridContainer,{children:products.map(product=>/*#__PURE__*/_jsxs(GridItem,{onClick:()=>handleProductClick(product.productId),children:[/*#__PURE__*/_jsx(\"img\",{alt:\"\\uC774\\uBBF8\\uC9C0\",src:product.productImage}),/*#__PURE__*/_jsx(ProuctName,{children:product.productName}),/*#__PURE__*/_jsxs(ProuctPrice,{children:[product.productPrice,\"\\uC6D0\"]})]},product.productId))})})})});};export default ProductListPage;","map":{"version":3,"names":["AxiosApi","useState","useEffect","useNavigate","useCart","ProuctPrice","ProuctName","ProductContainer","GridContainer","GridItem","BtnShape","ClickBtn","TotalAmount","Totality","Quantity","QuantityText","FreeShipping","ItemContainer","ImgContainer","CalContainer","ProductName","ProductPrice","ProductItemCnt","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProductListPage","_ref","selectedArtist","products","setProducts","navigate","selectedProduct","setSelectedProduct","count","setCount","addToCart","handleQuantityChange","newQuantity","isNaN","totalPrice","parseInt","productPrice","replace","formattedTotalPrice","toLocaleString","handlePurchase","console","log","productName","quantity","productDetails","state","productList","handleAddToCart","response","productGet","data","filter","product","artistName","error","handleProductClick","productId","find","p","children","alt","src","productImage","style","width","height","onCountChange","onClick","map"],"sources":["C:/dev/PROJECT_TOTAL/src/main/react/src/component/Product/ProductListPage.jsx"],"sourcesContent":["import AxiosApi from \"../../axios/ProductAxios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCart } from '../../context/CartContext';\r\nimport { \r\n    ProuctPrice,\r\n    ProuctName,\r\n    ProductContainer, \r\n    GridContainer, \r\n    GridItem } from \"../../style/Product/Product-Layout\";\r\nimport { \r\n    BtnShape,\r\n    ClickBtn,\r\n    TotalAmount,\r\n    Totality,\r\n    Quantity,\r\n    QuantityText,\r\n    FreeShipping,\r\n    ItemContainer, \r\n    ImgContainer, \r\n    CalContainer,\r\n    ProductName,\r\n    ProductPrice \r\n} from \"../../style/Product/Product-Detail\";\r\nimport ProductItemCnt from \"./ProductItemCnt\";\r\n\r\n\r\nconst ProductListPage = ({ selectedArtist,products,setProducts}) => {\r\n    const navigate = useNavigate();\r\n    const [selectedProduct, setSelectedProduct] = useState(null); // 선택된 제품 상태\r\n    const [count, setCount] = useState(1); // 상품 수량 관리\r\n    const { addToCart } = useCart();\r\n\r\n    // 상품 수량 변경 핸들러\r\n    const handleQuantityChange = (newQuantity) => {\r\n        if (!isNaN(newQuantity) && newQuantity > 0) {\r\n            setCount(newQuantity);\r\n        } else {    \r\n            setCount(1); // 기본값 설정 또는 다른 오류 처리\r\n        }\r\n    };\r\n    \r\n    const totalPrice = selectedProduct? parseInt(selectedProduct.productPrice.replace(/,/g, '')) * count : 0;\r\n    const formattedTotalPrice = totalPrice.toLocaleString();\r\n\r\n    // 구매 처리 함수\r\n    const handlePurchase = () => {\r\n        console.log({\r\n            productName: selectedProduct.productName, \r\n            quantity: count, \r\n            totalPrice: formattedTotalPrice \r\n        });\r\n\r\n        const productDetails = {\r\n            ...selectedProduct,\r\n            quantity: count,\r\n            totalPrice: totalPrice\r\n        };\r\n\r\n        navigate('/orderform', { state: productDetails })\r\n        };\r\n    \r\n    useEffect(() => {\r\n        productList();\r\n    }, [selectedArtist]);\r\n\r\n    const handleAddToCart = () => {\r\n        console.log(\"Adding to cart:\", selectedProduct); // \r\n        addToCart(selectedProduct, count, totalPrice);\r\n        navigate('/cart');\r\n    };\r\n    const productList = async () => {\r\n        try {\r\n            const response = await AxiosApi.productGet();\r\n            let data = response.data;\r\n            if (selectedArtist) {\r\n                data = data.filter(product => product.artistName === selectedArtist);\r\n            }\r\n            setProducts(data);\r\n        } catch (error) {\r\n            console.error('데이터를 불러오는데 실패했습니다', error);\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        productList();\r\n    }, []);\r\n\r\n    const handleProductClick = productId => {\r\n        const product = products.find(p => p.productId === productId);\r\n        setSelectedProduct(product);\r\n    };\r\n    return (\r\n        <>\r\n            {selectedProduct ? (\r\n                <ItemContainer>\r\n                    <ImgContainer>\r\n                        <img alt=\"productimg\" src={selectedProduct.productImage} style={{width:\"38rem\", height:\"38rem\"}}/>\r\n                    </ImgContainer>\r\n                    <CalContainer>\r\n                        <ProductName>{selectedProduct.productName}</ProductName>\r\n                        <ProductPrice>{selectedProduct.productPrice}원</ProductPrice>\r\n                        <FreeShipping>무료배송</FreeShipping>\r\n                        <Quantity>\r\n                            <QuantityText>수량</QuantityText>\r\n                            <ProductItemCnt count={count} onCountChange={handleQuantityChange} />\r\n                        </Quantity>\r\n                        <Totality>\r\n                            <div>{count}개 상품 금액 </div>\r\n                            <TotalAmount>{formattedTotalPrice} 원</TotalAmount>\r\n                        </Totality>\r\n                        <BtnShape>\r\n                            <ClickBtn onClick={handleAddToCart}>장바구니 담기</ClickBtn>\r\n                        </BtnShape>\r\n                        <div>\r\n                        </div>\r\n                    </CalContainer>\r\n                </ItemContainer>\r\n            ) : (\r\n                <>\r\n                    <ProductContainer>\r\n                        <GridContainer>\r\n                            {products.map(product => (\r\n                                <GridItem key={product.productId} onClick={() => handleProductClick(product.productId)}>\r\n                                    <img alt=\"이미지\" src={product.productImage} />\r\n                                    <ProuctName>{product.productName}</ProuctName>\r\n                                    <ProuctPrice>{product.productPrice}원</ProuctPrice>\r\n                                </GridItem>\r\n                            ))}\r\n                        </GridContainer>\r\n                    </ProductContainer>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductListPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}