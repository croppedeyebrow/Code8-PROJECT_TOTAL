{"ast":null,"code":"import React from'react';import{useCart}from'../../context/CartContext';import{useNavigate}from'react-router-dom';import ProductItemCnt from\"../../component/Product/ProductItemCnt\";import{CartLayout,CartContainer,ItemHeader,Item,ItemName,ItemQuantity,ItemPrice,SummaryContainer,CheckoutButton,TotalContainer,ItemDel,OrderAmount,TotalOrder}from\"../../style/Product/Cart\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CartPage=(quantity,totalprice)=>{const navigate=useNavigate();const{cart,updateQuantity,removeFromCart}=useCart();// 전역 장바구니 상태 사용\n// 총 수량과 총 가격 계산\n// const total = cart.reduce((acc, item) => {\n//     return {\n//         totalQuantity: acc.totalQuantity + item.quantity,\n//         totalPrice: acc.totalPrice + item.totalPrice\n//     };\n// }, { totalQuantity: 0, totalPrice: 0 });\n// 수량 변경 처리 함수\nconst handleQuantityChange=(productId,newQuantity)=>{console.log(\"Changing quantity for product \".concat(productId,\" to \").concat(newQuantity));if(newQuantity>=0){updateQuantity(productId,newQuantity);}};// 아이템 제거 처리 함수\nconst handleRemove=productId=>{console.log(\"Removing product \".concat(productId));removeFromCart(productId);};const handleCheckout=()=>{const totalAmount=calculateTotal();// 총액이 0원 이상일 때만 결제가 진행되도록 조건을 추가합니다.\nif(totalAmount>0){//   alert(`총 ${totalAmount.toLocaleString()}원 결제가 완료되었습니다.`);\nnavigate('/orderform',{state:{cart,totalAmount}});}else{// 총액이 0원일 경우에는 결제 실패 메시지를 표시합니다.\nalert(\"결제할 상품이 장바구니에 없습니다.\");navigate(-1);}};// 총액 계산 함수\nconst calculateTotal=()=>{return cart.reduce((total,item)=>total+item.price*item.quantity,0);};return/*#__PURE__*/_jsxs(CartLayout,{children:[/*#__PURE__*/_jsxs(CartContainer,{children:[/*#__PURE__*/_jsx(ItemHeader,{children:\"\\uC7A5\\uBC14\\uAD6C\\uB2C8\"}),cart.map(item=>/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(ItemName,{children:item.productName}),/*#__PURE__*/_jsx(ItemQuantity,{children:/*#__PURE__*/_jsx(ProductItemCnt,{count:item.quantity,onCountChange:newQuantity=>handleQuantityChange(item.productId,newQuantity)})}),/*#__PURE__*/_jsxs(ItemPrice,{children:[(item.price*item.quantity).toLocaleString(),\"\\uC6D0\"]}),/*#__PURE__*/_jsx(ItemDel,{onClick:()=>handleRemove(item.productId),children:\"X\"})]},item.productId))]}),/*#__PURE__*/_jsx(SummaryContainer,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(OrderAmount,{children:\"\\uC8FC\\uBB38 \\uC608\\uC0C1 \\uAE08\\uC561\"}),/*#__PURE__*/_jsxs(TotalContainer,{children:[/*#__PURE__*/_jsx(TotalOrder,{children:\"\\uCD1D \\uC0C1\\uD488 \\uAE08\\uC561\"}),/*#__PURE__*/_jsxs(TotalOrder,{children:[calculateTotal().toLocaleString(),\"\\uC6D0\"]})]}),/*#__PURE__*/_jsx(CheckoutButton,{onClick:handleCheckout,children:\"\\uC8FC\\uBB38\\uD558\\uB7EC\\uAC00\\uAE30\"})]})})]});};export default CartPage;","map":{"version":3,"names":["React","useCart","useNavigate","ProductItemCnt","CartLayout","CartContainer","ItemHeader","Item","ItemName","ItemQuantity","ItemPrice","SummaryContainer","CheckoutButton","TotalContainer","ItemDel","OrderAmount","TotalOrder","jsx","_jsx","jsxs","_jsxs","CartPage","quantity","totalprice","navigate","cart","updateQuantity","removeFromCart","handleQuantityChange","productId","newQuantity","console","log","concat","handleRemove","handleCheckout","totalAmount","calculateTotal","state","alert","reduce","total","item","price","children","map","productName","count","onCountChange","toLocaleString","onClick"],"sources":["C:/dev/PROJECT_TOTAL/src/main/react/src/pages/Product/CartPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useCart } from '../../context/CartContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ProductItemCnt from \"../../component/Product/ProductItemCnt\";\r\nimport {\r\n  CartLayout,\r\n  CartContainer,\r\n  ItemHeader,\r\n  Item,\r\n  ItemName,\r\n  ItemQuantity,\r\n  ItemPrice,\r\n  SummaryContainer,\r\n  CheckoutButton,\r\n  TotalContainer,\r\n  ItemDel,\r\n  OrderAmount,\r\n  TotalOrder,\r\n} from \"../../style/Product/Cart\";\r\n\r\n\r\nconst CartPage = (quantity, totalprice) => {\r\n    const navigate = useNavigate();\r\n    const { cart, updateQuantity, removeFromCart } = useCart(); // 전역 장바구니 상태 사용\r\n\r\n    // 총 수량과 총 가격 계산\r\n    // const total = cart.reduce((acc, item) => {\r\n    //     return {\r\n    //         totalQuantity: acc.totalQuantity + item.quantity,\r\n    //         totalPrice: acc.totalPrice + item.totalPrice\r\n    //     };\r\n    // }, { totalQuantity: 0, totalPrice: 0 });\r\n\r\n    // 수량 변경 처리 함수\r\n    const handleQuantityChange = (productId, newQuantity) => {\r\n        console.log(`Changing quantity for product ${productId} to ${newQuantity}`);\r\n        if (newQuantity >= 0) {\r\n            updateQuantity(productId, newQuantity);\r\n        }\r\n    };\r\n\r\n\r\n    // 아이템 제거 처리 함수\r\n    const handleRemove = (productId) => {\r\n        console.log(`Removing product ${productId}`);\r\n        removeFromCart(productId);\r\n    };\r\n\r\n    const handleCheckout = () => {\r\n        const totalAmount = calculateTotal();\r\n      \r\n        // 총액이 0원 이상일 때만 결제가 진행되도록 조건을 추가합니다.\r\n        if (totalAmount > 0) {\r\n        //   alert(`총 ${totalAmount.toLocaleString()}원 결제가 완료되었습니다.`);\r\n            navigate('/orderform', { \r\n                state: { cart, totalAmount } \r\n            });\r\n        } else {\r\n          // 총액이 0원일 경우에는 결제 실패 메시지를 표시합니다.\r\n          alert(\"결제할 상품이 장바구니에 없습니다.\");\r\n          navigate(-1);\r\n        }\r\n      };\r\n    \r\n    // 총액 계산 함수\r\n    const calculateTotal = () => {\r\n        return cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n    };\r\n\r\n\r\n    return (\r\n        <CartLayout>\r\n            <CartContainer>\r\n                <ItemHeader>장바구니</ItemHeader>\r\n                {cart.map((item) => (\r\n                    <Item key={item.productId}>\r\n                        <ItemName>{item.productName}</ItemName>\r\n                        <ItemQuantity>\r\n                            <ProductItemCnt\r\n                                count={item.quantity}\r\n                                onCountChange={(newQuantity) => handleQuantityChange(item.productId, newQuantity)}\r\n                            />\r\n                        </ItemQuantity>\r\n                        <ItemPrice>{(item.price * item.quantity).toLocaleString()}원</ItemPrice>\r\n                        <ItemDel onClick={() => handleRemove(item.productId)}>X</ItemDel>\r\n                    </Item>\r\n                ))}\r\n            </CartContainer>\r\n            <SummaryContainer>\r\n                <div>\r\n                <OrderAmount>주문 예상 금액</OrderAmount>\r\n                <TotalContainer>\r\n                    <TotalOrder>총 상품 금액</TotalOrder>\r\n                    <TotalOrder>{calculateTotal().toLocaleString()}원</TotalOrder>\r\n                </TotalContainer>\r\n                <CheckoutButton onClick={handleCheckout}>주문하러가기</CheckoutButton>\r\n                </div>\r\n            </SummaryContainer>\r\n        </CartLayout>\r\n    );\r\n};\r\n\r\nexport default CartPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}