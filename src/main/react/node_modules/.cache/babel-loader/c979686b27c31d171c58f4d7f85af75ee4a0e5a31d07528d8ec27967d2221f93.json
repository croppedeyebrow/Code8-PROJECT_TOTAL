{"ast":null,"code":"import{ReactComponent as Write}from\"../../images/Write.svg\";import{ReactComponent as Prev}from\"../../images/Prev.svg\";import{ReactComponent as Next}from\"../../images/Next.svg\";import{ReactComponent as Text}from\"../../images/write-svgrepo-com.svg\";import{ReactComponent as Image}from\"../../images/image-svgrepo-com.svg\";import{ReactComponent as Video}from\"../../images/video-camera-svgrepo-com.svg\";import{Pagination,InputContainer,MiddlePage,PageContant,PostBoarder,PostContainer,PostList,PostListTitle,PostPage,PostSection,PostTable,SendButton,TableBody,TableNormalRow,TableRow,TableRowDataDate,TableRowDataTitle,TableRowDataViews,TitleContent,TableRowDataWriter,Page,TableRowDataIcon}from\"../../style/CommunityPostStyle\";import{useNavigate,useParams}from\"react-router-dom\";import{useEffect,useState}from\"react\";import CommunityAxiosApi from\"../../axios/CommunityAxios\";import Common from\"../../utils/Common\";import CommunityRankComponent from\"./CommunityRankComponent\";import axios from\"axios\";import SearchComponent from\"./SearchComponent\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const CommunityComponent=()=>{var _posts$;const navigate=useNavigate();const[posts,setPosts]=useState([]);const[currentPage,setCurrentPage]=useState(0);const[totalPages,setTotalPages]=useState(0);const categoryId=Number(useParams().categoryId);const validCategoryId=isNaN(categoryId)?undefined:categoryId;const[totalComments,setTotalComments]=useState([]);const pageSize=10;const checkMediaContent=html=>{const parser=new DOMParser();const parsedHtml=parser.parseFromString(html,\"text/html\");const imgTag=parsedHtml.querySelector(\"img\");const videoTag=parsedHtml.querySelector(\"video\");const iframeTag=parsedHtml.querySelector(\"iframe\");return{image:imgTag!==null,video:videoTag!==null||iframeTag!==null// iframe 태그 추가\n};// 이미지 태그와 동영상 태그가 각각 있으면 true, 없으면 false를 반환\n};useEffect(()=>{// 서버에서 데이터를 가져오는 함수\nconst postPage=async()=>{const responsePages=validCategoryId===undefined?await CommunityAxiosApi.getCommunityTotalPages(pageSize):await CommunityAxiosApi.getCommunityTotalPagesByCategory(validCategoryId,pageSize);setTotalPages(responsePages.data);};postPage();},[validCategoryId,currentPage,pageSize]);useEffect(()=>{// 제대로 랜더링 되는지 파악하는 axios 구문 별내용은 없음\nlet cancelTokenSource=axios.CancelToken.source();const postList=async()=>{try{const rsp=validCategoryId===undefined?await CommunityAxiosApi.getCommunityList(currentPage,pageSize,{cancelToken:cancelTokenSource.token}):await CommunityAxiosApi.getCommunityListByCategory(validCategoryId,currentPage,pageSize,{cancelToken:cancelTokenSource.token});setPosts(rsp.data);console.log(rsp.data);// 전체 댓글 수 조회\nconst totalCommentsResponses=await Promise.all(rsp.data.map(post=>CommunityAxiosApi.getTotalComments(post.id)));const totalComments=totalCommentsResponses.map(response=>response.data);setTotalComments(totalComments);}catch(error){if(!axios.isCancel(error)){console.log(error);}}};postList();return()=>{cancelTokenSource.cancel();};},[validCategoryId,currentPage,pageSize,totalPages]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(PostContainer,{children:/*#__PURE__*/_jsxs(PostSection,{children:[/*#__PURE__*/_jsx(CommunityRankComponent,{categoryName:validCategoryId!==undefined?(_posts$=posts[0])===null||_posts$===void 0?void 0:_posts$.categoryName:\"전체\"}),/*#__PURE__*/_jsxs(InputContainer,{children:[/*#__PURE__*/_jsx(PostBoarder,{placeholder:\"\\uC0C8 \\uAE00\\uC744 \\uC791\\uC131\\uD558\\uC138\\uC694\",type:\"text\",onClick:()=>{navigate(\"/community/write\");}}),/*#__PURE__*/_jsx(SendButton,{children:/*#__PURE__*/_jsx(Write,{})})]}),/*#__PURE__*/_jsx(PostListTitle,{children:/*#__PURE__*/_jsx(TitleContent,{children:\"\\uC804\\uCCB4\"})}),/*#__PURE__*/_jsxs(PostList,{children:[/*#__PURE__*/_jsx(PostTable,{children:/*#__PURE__*/_jsxs(TableBody,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableRowDataIcon,{}),/*#__PURE__*/_jsx(TableRowDataWriter,{children:\"\\uC791\\uC131\\uC790\"}),/*#__PURE__*/_jsx(TableRowDataTitle,{children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(TableRowDataDate,{children:\"\\uC791\\uC131\\uC2DC\\uAC04\"}),/*#__PURE__*/_jsx(TableRowDataViews,{children:\"\\uC870\\uD68C\\uC218\"})]}),posts.map(post=>{// memberId가 있는지 확인하고, 있다면 memberId를 사용하고 없다면 기존의 로직 수행\nconst segments=post.ipAddress?post.ipAddress.split(\".\"):\"\";const ipAddress=segments?\"\".concat(segments[0],\".\").concat(segments[1]):\"\";const hasMediaContent=checkMediaContent(post.content);const writerInfo=post.email?post.email:\"\".concat(Common.truncateText(post.nickName,10),\"(\").concat(ipAddress,\")\");return/*#__PURE__*/_jsxs(TableNormalRow,{onClick:()=>{navigate(\"/community/detail/\".concat(post.id));},children:[/*#__PURE__*/_jsx(TableRowDataIcon,{children:hasMediaContent.video?/*#__PURE__*/_jsx(Video,{}):hasMediaContent.image?/*#__PURE__*/_jsx(Image,{}):/*#__PURE__*/_jsx(Text,{})}),/*#__PURE__*/_jsx(TableRowDataWriter,{children:writerInfo}),/*#__PURE__*/_jsxs(TableRowDataTitle,{children:[Common.truncateText(post.title,20),\" \",totalComments[posts.indexOf(post)]>0&&\"(\".concat(totalComments[posts.indexOf(post)],\")\")]}),/*#__PURE__*/_jsx(TableRowDataDate,{children:Common.timeFromNow(post.regDate)}),/*#__PURE__*/_jsx(TableRowDataViews,{children:post.viewCount})]},post.id);})]})}),/*#__PURE__*/_jsx(SearchComponent,{}),/*#__PURE__*/_jsxs(PostPage,{children:[/*#__PURE__*/_jsxs(Pagination,{children:[/*#__PURE__*/_jsx(PageContant,{children:/*#__PURE__*/_jsx(Prev,{})}),/*#__PURE__*/_jsx(PageContant,{onClick:()=>setCurrentPage(currentPage>1?currentPage-1:0),disabled:currentPage===0,children:\"\\uC774\\uC804\"})]}),Array.from({length:totalPages},(_,i)=>i+1).map(pageNum=>/*#__PURE__*/_jsx(MiddlePage,{onClick:()=>setCurrentPage(pageNum-1),active:currentPage===pageNum?\"true\":\"false\",children:/*#__PURE__*/_jsx(Page,{selected:currentPage===pageNum-1,href:\"#\",children:pageNum})},pageNum)),/*#__PURE__*/_jsxs(Pagination,{children:[/*#__PURE__*/_jsx(PageContant,{onClick:()=>setCurrentPage(currentPage<totalPages-1?currentPage+1:currentPage),disabled:currentPage===totalPages-1,children:\"\\uB2E4\\uC74C\"}),/*#__PURE__*/_jsx(PageContant,{children:/*#__PURE__*/_jsx(Next,{})})]})]})]})]})})});};export default CommunityComponent;","map":{"version":3,"names":["ReactComponent","Write","Prev","Next","Text","Image","Video","Pagination","InputContainer","MiddlePage","PageContant","PostBoarder","PostContainer","PostList","PostListTitle","PostPage","PostSection","PostTable","SendButton","TableBody","TableNormalRow","TableRow","TableRowDataDate","TableRowDataTitle","TableRowDataViews","TitleContent","TableRowDataWriter","Page","TableRowDataIcon","useNavigate","useParams","useEffect","useState","CommunityAxiosApi","Common","CommunityRankComponent","axios","SearchComponent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CommunityComponent","_posts$","navigate","posts","setPosts","currentPage","setCurrentPage","totalPages","setTotalPages","categoryId","Number","validCategoryId","isNaN","undefined","totalComments","setTotalComments","pageSize","checkMediaContent","html","parser","DOMParser","parsedHtml","parseFromString","imgTag","querySelector","videoTag","iframeTag","image","video","postPage","responsePages","getCommunityTotalPages","getCommunityTotalPagesByCategory","data","cancelTokenSource","CancelToken","source","postList","rsp","getCommunityList","cancelToken","token","getCommunityListByCategory","console","log","totalCommentsResponses","Promise","all","map","post","getTotalComments","id","response","error","isCancel","cancel","children","categoryName","placeholder","type","onClick","segments","ipAddress","split","concat","hasMediaContent","content","writerInfo","email","truncateText","nickName","title","indexOf","timeFromNow","regDate","viewCount","disabled","Array","from","length","_","i","pageNum","active","selected","href"],"sources":["C:/dev/PROJECT_TOTAL/src/main/react/src/component/community/CommunityComponent.jsx"],"sourcesContent":["import { ReactComponent as Write } from \"../../images/Write.svg\";\r\nimport { ReactComponent as Prev } from \"../../images/Prev.svg\";\r\nimport { ReactComponent as Next } from \"../../images/Next.svg\";\r\nimport { ReactComponent as Text } from \"../../images/write-svgrepo-com.svg\";\r\nimport { ReactComponent as Image } from \"../../images/image-svgrepo-com.svg\";\r\nimport { ReactComponent as Video } from \"../../images/video-camera-svgrepo-com.svg\";\r\nimport {\r\n  Pagination,\r\n  InputContainer,\r\n  MiddlePage,\r\n  PageContant,\r\n  PostBoarder,\r\n  PostContainer,\r\n  PostList,\r\n  PostListTitle,\r\n  PostPage,\r\n  PostSection,\r\n  PostTable,\r\n  SendButton,\r\n  TableBody,\r\n  TableNormalRow,\r\n  TableRow,\r\n  TableRowDataDate,\r\n  TableRowDataTitle,\r\n  TableRowDataViews,\r\n  TitleContent,\r\n  TableRowDataWriter,\r\n  Page,\r\n  TableRowDataIcon,\r\n} from \"../../style/CommunityPostStyle\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CommunityAxiosApi from \"../../axios/CommunityAxios\";\r\nimport Common from \"../../utils/Common\";\r\nimport CommunityRankComponent from \"./CommunityRankComponent\";\r\nimport axios from \"axios\";\r\nimport SearchComponent from \"./SearchComponent\";\r\n\r\nconst CommunityComponent = () => {\r\n  const navigate = useNavigate();\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const categoryId = Number(useParams().categoryId);\r\n  const validCategoryId = isNaN(categoryId) ? undefined : categoryId;\r\n  const [totalComments, setTotalComments] = useState([]);\r\n\r\n  const pageSize = 10;\r\n\r\n  const checkMediaContent = (html) => {\r\n    const parser = new DOMParser();\r\n    const parsedHtml = parser.parseFromString(html, \"text/html\");\r\n    const imgTag = parsedHtml.querySelector(\"img\");\r\n    const videoTag = parsedHtml.querySelector(\"video\");\r\n    const iframeTag = parsedHtml.querySelector(\"iframe\");\r\n\r\n    return {\r\n      image: imgTag !== null,\r\n      video: videoTag !== null || iframeTag !== null, // iframe 태그 추가\r\n    }; // 이미지 태그와 동영상 태그가 각각 있으면 true, 없으면 false를 반환\r\n  };\r\n  useEffect(() => {\r\n    // 서버에서 데이터를 가져오는 함수\r\n    const postPage = async () => {\r\n      const responsePages =\r\n        validCategoryId === undefined\r\n          ? await CommunityAxiosApi.getCommunityTotalPages(pageSize)\r\n          : await CommunityAxiosApi.getCommunityTotalPagesByCategory(\r\n              validCategoryId,\r\n              pageSize\r\n            );\r\n      setTotalPages(responsePages.data);\r\n    };\r\n\r\n    postPage();\r\n  }, [validCategoryId, currentPage, pageSize]);\r\n  useEffect(() => {\r\n    // 제대로 랜더링 되는지 파악하는 axios 구문 별내용은 없음\r\n    let cancelTokenSource = axios.CancelToken.source();\r\n    const postList = async () => {\r\n      try {\r\n        const rsp =\r\n          validCategoryId === undefined\r\n            ? await CommunityAxiosApi.getCommunityList(currentPage, pageSize, {\r\n                cancelToken: cancelTokenSource.token,\r\n              })\r\n            : await CommunityAxiosApi.getCommunityListByCategory(\r\n                validCategoryId,\r\n                currentPage,\r\n                pageSize,\r\n                { cancelToken: cancelTokenSource.token }\r\n              );\r\n        setPosts(rsp.data);\r\n        console.log(rsp.data);\r\n        // 전체 댓글 수 조회\r\n        const totalCommentsResponses = await Promise.all(\r\n          rsp.data.map((post) => CommunityAxiosApi.getTotalComments(post.id))\r\n        );\r\n        const totalComments = totalCommentsResponses.map(\r\n          (response) => response.data\r\n        );\r\n        setTotalComments(totalComments);\r\n      } catch (error) {\r\n        if (!axios.isCancel(error)) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    };\r\n    postList();\r\n    return () => {\r\n      cancelTokenSource.cancel();\r\n    };\r\n  }, [validCategoryId, currentPage, pageSize, totalPages]);\r\n\r\n  return (\r\n    <>\r\n      <PostContainer>\r\n        <PostSection>\r\n          <CommunityRankComponent\r\n            categoryName={\r\n              validCategoryId !== undefined ? posts[0]?.categoryName : \"전체\"\r\n            }\r\n          />\r\n          <InputContainer>\r\n            <PostBoarder\r\n              placeholder=\"새 글을 작성하세요\"\r\n              type=\"text\"\r\n              onClick={() => {\r\n                navigate(`/community/write`);\r\n              }}\r\n            ></PostBoarder>\r\n            <SendButton>\r\n              <Write />\r\n            </SendButton>\r\n          </InputContainer>\r\n          <PostListTitle>\r\n            <TitleContent>전체</TitleContent>\r\n          </PostListTitle>\r\n          <PostList>\r\n            <PostTable>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableRowDataIcon></TableRowDataIcon>\r\n                  <TableRowDataWriter>작성자</TableRowDataWriter>\r\n                  <TableRowDataTitle>제목</TableRowDataTitle>\r\n                  <TableRowDataDate>작성시간</TableRowDataDate>\r\n                  <TableRowDataViews>조회수</TableRowDataViews>\r\n                </TableRow>\r\n                {posts.map((post) => {\r\n                  // memberId가 있는지 확인하고, 있다면 memberId를 사용하고 없다면 기존의 로직 수행\r\n                  const segments = post.ipAddress\r\n                    ? post.ipAddress.split(\".\")\r\n                    : \"\";\r\n                  const ipAddress = segments\r\n                    ? `${segments[0]}.${segments[1]}`\r\n                    : \"\";\r\n                  const hasMediaContent = checkMediaContent(post.content);\r\n                  const writerInfo = post.email\r\n                    ? post.email\r\n                    : `${Common.truncateText(post.nickName, 10)}(${ipAddress})`;\r\n\r\n                  return (\r\n                    <TableNormalRow\r\n                      key={post.id}\r\n                      onClick={() => {\r\n                        navigate(`/community/detail/${post.id}`);\r\n                      }}\r\n                    >\r\n                      <TableRowDataIcon>\r\n                        {hasMediaContent.video ? (\r\n                          <Video />\r\n                        ) : hasMediaContent.image ? (\r\n                          <Image />\r\n                        ) : (\r\n                          <Text />\r\n                        )}\r\n                      </TableRowDataIcon>\r\n                      <TableRowDataWriter>{writerInfo}</TableRowDataWriter>\r\n                      <TableRowDataTitle>\r\n                        {Common.truncateText(post.title, 20)}{\" \"}\r\n                        {totalComments[posts.indexOf(post)] > 0 &&\r\n                          `(${totalComments[posts.indexOf(post)]})`}\r\n                      </TableRowDataTitle>\r\n                      <TableRowDataDate>\r\n                        {Common.timeFromNow(post.regDate)}\r\n                      </TableRowDataDate>\r\n                      <TableRowDataViews>{post.viewCount}</TableRowDataViews>\r\n                    </TableNormalRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </PostTable>\r\n            <SearchComponent />\r\n            <PostPage>\r\n              <Pagination>\r\n                <PageContant>\r\n                  <Prev />\r\n                </PageContant>\r\n                <PageContant\r\n                  onClick={() =>\r\n                    setCurrentPage(currentPage > 1 ? currentPage - 1 : 0)\r\n                  }\r\n                  disabled={currentPage === 0}\r\n                >\r\n                  이전\r\n                </PageContant>\r\n              </Pagination>\r\n              {/* for 문처럼 페이지를 생성하기 위해 Array 인스턴스 생성, _이건 아무의미없는값이고 서서히 늘어나는 현식 */}\r\n              {Array.from({ length: totalPages }, (_, i) => i + 1).map(\r\n                (pageNum) => (\r\n                  <MiddlePage\r\n                    key={pageNum}\r\n                    onClick={() => setCurrentPage(pageNum - 1)}\r\n                    active={currentPage === pageNum ? \"true\" : \"false\"}\r\n                  >\r\n                    <Page selected={currentPage === pageNum - 1} href=\"#\">\r\n                      {pageNum}\r\n                    </Page>\r\n                  </MiddlePage>\r\n                )\r\n              )}\r\n              <Pagination>\r\n                <PageContant\r\n                  onClick={() =>\r\n                    setCurrentPage(\r\n                      currentPage < totalPages - 1\r\n                        ? currentPage + 1\r\n                        : currentPage\r\n                    )\r\n                  }\r\n                  disabled={currentPage === totalPages - 1}\r\n                >\r\n                  다음\r\n                </PageContant>\r\n                <PageContant>\r\n                  <Next />\r\n                </PageContant>\r\n              </Pagination>\r\n            </PostPage>\r\n          </PostList>\r\n        </PostSection>\r\n      </PostContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommunityComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}