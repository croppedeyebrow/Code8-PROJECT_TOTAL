{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport EventEmitter from './event-emitter.js';\n/**\n * A Web Audio buffer player emulating the behavior of an HTML5 Audio element.\n */\nclass WebAudioPlayer extends EventEmitter {\n  constructor() {\n    let audioContext = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new AudioContext();\n    super();\n    this.bufferNode = null;\n    this.autoplay = false;\n    this.playStartTime = 0;\n    this.playedDuration = 0;\n    this._muted = false;\n    this.buffer = null;\n    this.currentSrc = '';\n    this.paused = true;\n    this.crossOrigin = null;\n    this.audioContext = audioContext;\n    this.gainNode = this.audioContext.createGain();\n    this.gainNode.connect(this.audioContext.destination);\n  }\n  load() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return;\n    });\n  }\n  get src() {\n    return this.currentSrc;\n  }\n  set src(value) {\n    this.currentSrc = value;\n    fetch(value).then(response => response.arrayBuffer()).then(arrayBuffer => this.audioContext.decodeAudioData(arrayBuffer)).then(audioBuffer => {\n      this.buffer = audioBuffer;\n      this.emit('loadedmetadata');\n      this.emit('canplay');\n      if (this.autoplay) this.play();\n    });\n  }\n  _play() {\n    var _a;\n    if (!this.paused) return;\n    this.paused = false;\n    (_a = this.bufferNode) === null || _a === void 0 ? void 0 : _a.disconnect();\n    this.bufferNode = this.audioContext.createBufferSource();\n    this.bufferNode.buffer = this.buffer;\n    this.bufferNode.connect(this.gainNode);\n    if (this.playedDuration >= this.duration) {\n      this.playedDuration = 0;\n    }\n    this.bufferNode.start(this.audioContext.currentTime, this.playedDuration);\n    this.playStartTime = this.audioContext.currentTime;\n    this.bufferNode.onended = () => {\n      if (this.currentTime >= this.duration) {\n        this.pause();\n        this.emit('ended');\n      }\n    };\n  }\n  _pause() {\n    var _a;\n    if (this.paused) return;\n    this.paused = true;\n    (_a = this.bufferNode) === null || _a === void 0 ? void 0 : _a.stop();\n    this.playedDuration += this.audioContext.currentTime - this.playStartTime;\n  }\n  play() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this._play();\n      this.emit('play');\n    });\n  }\n  pause() {\n    this._pause();\n    this.emit('pause');\n  }\n  stopAt(timeSeconds) {\n    var _a, _b;\n    const delay = timeSeconds - this.currentTime;\n    (_a = this.bufferNode) === null || _a === void 0 ? void 0 : _a.stop(this.audioContext.currentTime + delay);\n    (_b = this.bufferNode) === null || _b === void 0 ? void 0 : _b.addEventListener('ended', () => {\n      this.bufferNode = null;\n      this.pause();\n    }, {\n      once: true\n    });\n  }\n  setSinkId(deviceId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const ac = this.audioContext;\n      return ac.setSinkId(deviceId);\n    });\n  }\n  get playbackRate() {\n    var _a, _b;\n    return (_b = (_a = this.bufferNode) === null || _a === void 0 ? void 0 : _a.playbackRate.value) !== null && _b !== void 0 ? _b : 1;\n  }\n  set playbackRate(value) {\n    if (this.bufferNode) {\n      this.bufferNode.playbackRate.value = value;\n    }\n  }\n  get currentTime() {\n    return this.paused ? this.playedDuration : this.playedDuration + this.audioContext.currentTime - this.playStartTime;\n  }\n  set currentTime(value) {\n    this.emit('seeking');\n    if (this.paused) {\n      this.playedDuration = value;\n    } else {\n      this._pause();\n      this.playedDuration = value;\n      this._play();\n    }\n    this.emit('timeupdate');\n  }\n  get duration() {\n    var _a;\n    return ((_a = this.buffer) === null || _a === void 0 ? void 0 : _a.duration) || 0;\n  }\n  get volume() {\n    return this.gainNode.gain.value;\n  }\n  set volume(value) {\n    this.gainNode.gain.value = value;\n    this.emit('volumechange');\n  }\n  get muted() {\n    return this._muted;\n  }\n  set muted(value) {\n    if (this._muted === value) return;\n    this._muted = value;\n    if (this._muted) {\n      this.gainNode.disconnect();\n    } else {\n      this.gainNode.connect(this.audioContext.destination);\n    }\n  }\n  /** Get the GainNode used to play the audio. Can be used to attach filters. */\n  getGainNode() {\n    return this.gainNode;\n  }\n}\nexport default WebAudioPlayer;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","EventEmitter","WebAudioPlayer","constructor","audioContext","arguments","length","undefined","AudioContext","bufferNode","autoplay","playStartTime","playedDuration","_muted","buffer","currentSrc","paused","crossOrigin","gainNode","createGain","connect","destination","load","src","fetch","response","arrayBuffer","decodeAudioData","audioBuffer","emit","play","_play","_a","disconnect","createBufferSource","duration","start","currentTime","onended","pause","_pause","stop","stopAt","timeSeconds","_b","delay","addEventListener","once","setSinkId","deviceId","ac","playbackRate","volume","gain","muted","getGainNode"],"sources":["C:/dev/PROJECT_TOTAL/src/main/react/node_modules/wavesurfer.js/dist/webaudio.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport EventEmitter from './event-emitter.js';\n/**\n * A Web Audio buffer player emulating the behavior of an HTML5 Audio element.\n */\nclass WebAudioPlayer extends EventEmitter {\n    constructor(audioContext = new AudioContext()) {\n        super();\n        this.bufferNode = null;\n        this.autoplay = false;\n        this.playStartTime = 0;\n        this.playedDuration = 0;\n        this._muted = false;\n        this.buffer = null;\n        this.currentSrc = '';\n        this.paused = true;\n        this.crossOrigin = null;\n        this.audioContext = audioContext;\n        this.gainNode = this.audioContext.createGain();\n        this.gainNode.connect(this.audioContext.destination);\n    }\n    load() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return;\n        });\n    }\n    get src() {\n        return this.currentSrc;\n    }\n    set src(value) {\n        this.currentSrc = value;\n        fetch(value)\n            .then((response) => response.arrayBuffer())\n            .then((arrayBuffer) => this.audioContext.decodeAudioData(arrayBuffer))\n            .then((audioBuffer) => {\n            this.buffer = audioBuffer;\n            this.emit('loadedmetadata');\n            this.emit('canplay');\n            if (this.autoplay)\n                this.play();\n        });\n    }\n    _play() {\n        var _a;\n        if (!this.paused)\n            return;\n        this.paused = false;\n        (_a = this.bufferNode) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this.bufferNode = this.audioContext.createBufferSource();\n        this.bufferNode.buffer = this.buffer;\n        this.bufferNode.connect(this.gainNode);\n        if (this.playedDuration >= this.duration) {\n            this.playedDuration = 0;\n        }\n        this.bufferNode.start(this.audioContext.currentTime, this.playedDuration);\n        this.playStartTime = this.audioContext.currentTime;\n        this.bufferNode.onended = () => {\n            if (this.currentTime >= this.duration) {\n                this.pause();\n                this.emit('ended');\n            }\n        };\n    }\n    _pause() {\n        var _a;\n        if (this.paused)\n            return;\n        this.paused = true;\n        (_a = this.bufferNode) === null || _a === void 0 ? void 0 : _a.stop();\n        this.playedDuration += this.audioContext.currentTime - this.playStartTime;\n    }\n    play() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._play();\n            this.emit('play');\n        });\n    }\n    pause() {\n        this._pause();\n        this.emit('pause');\n    }\n    stopAt(timeSeconds) {\n        var _a, _b;\n        const delay = timeSeconds - this.currentTime;\n        (_a = this.bufferNode) === null || _a === void 0 ? void 0 : _a.stop(this.audioContext.currentTime + delay);\n        (_b = this.bufferNode) === null || _b === void 0 ? void 0 : _b.addEventListener('ended', () => {\n            this.bufferNode = null;\n            this.pause();\n        }, { once: true });\n    }\n    setSinkId(deviceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ac = this.audioContext;\n            return ac.setSinkId(deviceId);\n        });\n    }\n    get playbackRate() {\n        var _a, _b;\n        return (_b = (_a = this.bufferNode) === null || _a === void 0 ? void 0 : _a.playbackRate.value) !== null && _b !== void 0 ? _b : 1;\n    }\n    set playbackRate(value) {\n        if (this.bufferNode) {\n            this.bufferNode.playbackRate.value = value;\n        }\n    }\n    get currentTime() {\n        return this.paused ? this.playedDuration : this.playedDuration + this.audioContext.currentTime - this.playStartTime;\n    }\n    set currentTime(value) {\n        this.emit('seeking');\n        if (this.paused) {\n            this.playedDuration = value;\n        }\n        else {\n            this._pause();\n            this.playedDuration = value;\n            this._play();\n        }\n        this.emit('timeupdate');\n    }\n    get duration() {\n        var _a;\n        return ((_a = this.buffer) === null || _a === void 0 ? void 0 : _a.duration) || 0;\n    }\n    get volume() {\n        return this.gainNode.gain.value;\n    }\n    set volume(value) {\n        this.gainNode.gain.value = value;\n        this.emit('volumechange');\n    }\n    get muted() {\n        return this._muted;\n    }\n    set muted(value) {\n        if (this._muted === value)\n            return;\n        this._muted = value;\n        if (this._muted) {\n            this.gainNode.disconnect();\n        }\n        else {\n            this.gainNode.connect(this.audioContext.destination);\n        }\n    }\n    /** Get the GainNode used to play the audio. Can be used to attach filters. */\n    getGainNode() {\n        return this.gainNode;\n    }\n}\nexport default WebAudioPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}