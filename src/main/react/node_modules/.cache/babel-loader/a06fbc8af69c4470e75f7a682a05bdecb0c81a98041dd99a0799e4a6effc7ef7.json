{"ast":null,"code":"import axios from\"axios\";import Common from\"../utils/Common\";const MemberInfoAxiosApi={// 유저 정보 가져오기\ngetUserInfo:async email=>{const accessToken=Common.getAccessToken();return await axios.get(Common.DOMAIN+\"/auth/infoByEmail?email=\".concat(email),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});},// 유저 음원 가져오기\ngetUserMusic:async userId=>{const accessToken=Common.getAccessToken();return await axios.get(Common.DOMAIN+\"/music/user/\".concat(userId,\"/music\"),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});},// 유저 공연 가져오기\ngetUserInfoByPerformanceEmail:async email=>{const accessToken=Common.getAccessToken();return await axios.get(Common.DOMAIN+\"/performance/infoByEmail?email=\".concat(email),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});},// 포인트 충전\nincreasePoints:async(email,points)=>{const accessToken=Common.getAccessToken();return await axios.post(Common.DOMAIN+\"/user/increasePoints\",{email:email,points:points.toString()// points 값을 문자열로 변환\n},{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});},// 포인트 환전\nexchangePoints:async(email,points)=>{const accessToken=Common.getAccessToken();return await axios.post(Common.DOMAIN+\"/user/exchangePoints\",{email:email,points:points.toString()},{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});},// 채팅방 목록 보기\nchatList:async()=>{const accessToken=Common.getAccessToken();return await axios.get(Common.DOMAIN+\"/chat/room\",{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});},// ownerId로 채팅방 목록 가져오기\nchatListByOwnerId:async ownerId=>{const accessToken=Common.getAccessToken();return await axios.get(\"\".concat(Common.DOMAIN,\"/chat/rooms/owner/\").concat(ownerId),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});},// 채팅방 정보 보기\nchatDetail:async roomId=>{const accessToken=Common.getAccessToken();return await axios.get(Common.DOMAIN+\"/chat/room/\".concat(roomId),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});},// 채팅방 생성\nchatCreate:async(email,name)=>{const chat={email:email,name:name};const accessToken=Common.getAccessToken();return await axios.post(Common.DOMAIN+\"/chat/new\",chat,{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});},// 이전 채팅 가져오기\nrecentChatLoad:async roomId=>{const accessToken=Common.getAccessToken();return await axios.get(Common.DOMAIN+\"/chat/message/\".concat(roomId),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});},// 채팅방 세션 수 가져오기\nchatSessionCount:async roomId=>{const accessToken=Common.getAccessToken();return await axios.get(Common.DOMAIN+\"/chat/room/\".concat(roomId,\"/sessioncount\"),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \"+accessToken}});}};export default MemberInfoAxiosApi;","map":{"version":3,"names":["axios","Common","MemberInfoAxiosApi","getUserInfo","email","accessToken","getAccessToken","get","DOMAIN","concat","headers","Authorization","getUserMusic","userId","getUserInfoByPerformanceEmail","increasePoints","points","post","toString","exchangePoints","chatList","chatListByOwnerId","ownerId","chatDetail","roomId","chatCreate","name","chat","recentChatLoad","chatSessionCount"],"sources":["C:/dev/PROJECT_TOTAL/src/main/react/src/axios/MemberInfoAxios.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport Common from \"../utils/Common\";\r\n\r\nconst MemberInfoAxiosApi = {\r\n  // 유저 정보 가져오기\r\n  getUserInfo: async (email) => {\r\n    const accessToken = Common.getAccessToken();\r\n\r\n    return await axios.get(Common.DOMAIN + `/auth/infoByEmail?email=${email}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + accessToken,\r\n      },\r\n    });\r\n  },\r\n  // 유저 음원 가져오기\r\n  getUserMusic: async (userId) => {\r\n    const accessToken = Common.getAccessToken();\r\n\r\n    return await axios.get(Common.DOMAIN + `/music/user/${userId}/music`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + accessToken,\r\n      },\r\n    });\r\n  },\r\n  // 유저 공연 가져오기\r\n  getUserInfoByPerformanceEmail: async (email) => {\r\n    const accessToken = Common.getAccessToken();\r\n\r\n    return await axios.get(\r\n      Common.DOMAIN + `/performance/infoByEmail?email=${email}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + accessToken,\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // 포인트 충전\r\n  increasePoints: async (email, points) => {\r\n    const accessToken = Common.getAccessToken();\r\n\r\n    return await axios.post(\r\n      Common.DOMAIN + `/user/increasePoints`,\r\n      {\r\n        email: email,\r\n        points: points.toString(), // points 값을 문자열로 변환\r\n      },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + accessToken,\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // 포인트 환전\r\n  exchangePoints: async (email, points) => {\r\n    const accessToken = Common.getAccessToken();\r\n\r\n    return await axios.post(\r\n      Common.DOMAIN + `/user/exchangePoints`,\r\n      {\r\n        email: email,\r\n        points: points.toString(),\r\n      },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + accessToken,\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // 채팅방 목록 보기\r\n  chatList: async () => {\r\n    const accessToken = Common.getAccessToken();\r\n\r\n    return await axios.get(Common.DOMAIN + \"/chat/room\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + accessToken,\r\n      },\r\n    });\r\n  },\r\n  // ownerId로 채팅방 목록 가져오기\r\n  chatListByOwnerId: async (ownerId) => {\r\n    const accessToken = Common.getAccessToken();\r\n\r\n    return await axios.get(`${Common.DOMAIN}/chat/rooms/owner/${ownerId}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + accessToken,\r\n      },\r\n    });\r\n  },\r\n  // 채팅방 정보 보기\r\n  chatDetail: async (roomId) => {\r\n    const accessToken = Common.getAccessToken();\r\n\r\n    return await axios.get(Common.DOMAIN + `/chat/room/${roomId}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + accessToken,\r\n      },\r\n    });\r\n  },\r\n  // 채팅방 생성\r\n  chatCreate: async (email, name) => {\r\n    const chat = {\r\n      email: email,\r\n      name: name,\r\n    };\r\n    const accessToken = Common.getAccessToken();\r\n\r\n    return await axios.post(Common.DOMAIN + \"/chat/new\", chat, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + accessToken,\r\n      },\r\n    });\r\n  },\r\n  // 이전 채팅 가져오기\r\n  recentChatLoad: async (roomId) => {\r\n    const accessToken = Common.getAccessToken();\r\n\r\n    return await axios.get(Common.DOMAIN + `/chat/message/${roomId}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + accessToken,\r\n      },\r\n    });\r\n  },\r\n  // 채팅방 세션 수 가져오기\r\n  chatSessionCount: async (roomId) => {\r\n    const accessToken = Common.getAccessToken();\r\n\r\n    return await axios.get(\r\n      Common.DOMAIN + `/chat/room/${roomId}/sessioncount`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + accessToken,\r\n        },\r\n      }\r\n    );\r\n  },\r\n};\r\n\r\nexport default MemberInfoAxiosApi;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}